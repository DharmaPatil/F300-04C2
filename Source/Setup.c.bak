/*
工作参数设置相关函数
*/
#include "include.h"


#define SETUP_CHECKCODE     0           //基本工作参数密码校验
#define DISP_SETUP          1           //显示"SEtUP"
#define SETUP_F1            2           //Mode 秤体工作模式相关参数
#define SETUP_F1_1          3           //秤体模式
#define SETUP_F1_2          4           //无斗毛净重
#define SETUP_F1_3          5           //给料方式
#define SETUP_F2            6           //Base 秤体基本参数设置
#define SETUP_F2_1          7           //自动清零间隔  
#define SETUP_F2_2          8           //AD数字滤波参数
#define SETUP_F2_3          9           //清零范围      
#define SETUP_F2_4          10          //判稳范围      
#define SETUP_F2_5          11          //零点跟踪范围  
#define SETUP_F2_6          12          //AD采样速度    
#define SETUP_F2_7          13          //扩展接口类型  
#define SETUP_F3            14          //Switch 功能开关参数
#define SETUP_F3_1          15          //上电自动清零开关
#define SETUP_F3_2          16          //手动卸料累计开关 
#define SETUP_F3_3          17          //定值重量保持开关
#define SETUP_F3_4          18          //累计查询密码开关
#define SETUP_F3_5          19          //累计清除密码开关
#define SETUP_F4            20          //Et1 扩展口1参数
#define SETUP_F4_1          21          //通讯方式        
#define SETUP_F4_2          22          //设备号          
#define SETUP_F4_3          23          //波特率          
#define SETUP_F4_4          24          //数据格式        
#define SETUP_F4_5          25          //modbus高低字顺序
#define SETUP_F4_6          26          //自动打印开关    
#define SETUP_F5            27          //Et2 扩展口2参数
#define SETUP_F5_1          28          //通讯方式        
#define SETUP_F5_2          29          //设备号          
#define SETUP_F5_3          30          //波特率          
#define SETUP_F5_4          31          //数据格式        
#define SETUP_F5_5          32          //modbus高低字顺序
#define SETUP_F5_6          33          //自动打印开关    
#define SETUP_F6            34          //工作参数密码开关
#define SETUP_F6_1          35          //工作参数密码
#define SETUP_END           36


struct SETUP gs_Setup;
//u32 gu32_SetupCodeSwitch;              //工作参数密码开关
//u32 gu32_SetupCode;                    //工作参数密码

u8 gu8_SetupInTime = 0;                //工作参数密码输入错误次数


const u16 gu16_SetupRealItem[]=       //用来显示参数下角标
//密码输入 setup     
  {0,      1,        
// F1   F1.1 F1.2 F1.3
   10,  11,  12,  13,
// F2   F2.1  F2.2  F2.3  F2.4  F2.5  F2.6  F2.7
   20,  21,   22 ,  23,   24,   25,   26,   27
// F3   F3.1  F3.2  F3.3  F3.4  F3.5
   30,  31,   32,   33,   34,   35,
// F4   F4.1  F4.2  F4.3  F4.4  F4.5  F4.6
   40,  41,   42,   43,   44,   45,   46,
// F5   F5.1  F5.2  F5.3  F5.4  F5.5  F5.6
   50,  51,   52,   53,   54,   55,   56,
// F6   F6.1
   60,  61};


const u8 gu8_SetupRightItem[] =        //按→键获得下一参数
//密码输入 setup     
  {0,      SETUP_F1, 
// F1        F1.1        F1.2        F1.3
   SETUP_F2, SETUP_F1_2, SETUP_F1_3, SETUP_F1_1,
// F2        F2.1        F2.2         F2.3        F2.4        F2.5        F2.6        F2.7
   SETUP_F3, SETUP_F2_2, SETUP_F2_3 , SETUP_F2_4, SETUP_F2_5, SETUP_F2_6, SETUP_F2_7, SETUP_F2_1,
// F3        F3.1        F3.2        F3.3        F3.4        F3.5
   SETUP_F4, SETUP_F3_2, SETUP_F3_3, SETUP_F3_4, SETUP_F3_5, SETUP_F3_1
// F4        F4.1        F4.2        F4.3        F4.4        F4.5        F4.6
   SETUP_F5, SETUP_F4_2, SETUP_F4_3, SETUP_F4_4, SETUP_F4_5, SETUP_F4_6, SETUP_F4_1,
// F5        F5.1        F5.2        F5.3        F5.4        F5.5        F5.6
   SETUP_F6, SETUP_F5_2, SETUP_F5_3, SETUP_F5_4, SETUP_F5_5, SETUP_F5_6, SETUP_F5_1,
// F6        F6.1
   SETUP_F1, SETUP_F6_1};
   
const u8 gu8_SetupEnterItem[] =        //按ENTER键获得下一参数
//密码输入     setup     
  {DISP_SETUP, SETUP_F1, 
// F1          F1.1        F1.2        F1.3
   SETUP_F1_1, SETUP_F1_2, SETUP_F1_3, SETUP_F1_1,
// F2          F2.1        F2.2        F2.3        F2.4        F2.5        F2.6        F2.7
   SETUP_F2_1, SETUP_F2_2, SETUP_F2_3, SETUP_F2_4, SETUP_F2_5, SETUP_F2_6, SETUP_F2_7, SETUP_F2_1,
// F3          F3.1        F3.2        F3.3        F3.4        F3.5
   SETUP_F3_1, SETUP_F3_2, SETUP_F3_3, SETUP_F3_4, SETUP_F3_5, SETUP_F3_1,
// F4          F4.1        F4.2        F4.3        F4.4        F4.5        F4.6
   SETUP_F4_1, SETUP_F4_2, SETUP_F4_3, SETUP_F4_4, SETUP_F4_5, SETUP_F4_6, SETUP_F4_1,
// F5          F5.1        F5.2        F5.3        F5.4        F5.5        F5.6
   SETUP_F5_1, SETUP_F5_2, SETUP_F5_3, SETUP_F5_4, SETUP_F5_5, SETUP_F5_6, SETUP_F5_1,
// F6          F6.1
   SETUP_F6_1, SETUP_F6};


/*********************************************************************
函数名称: void Key_SetupState(void)
功    能: 工作参数设置处理
说    明: 
入口参数: 
返 回 值: 
设    计: chx                  时    间: 2013-12-19
修    改:                      时    间: 
*********************************************************************/
void Key_SetupState(void)
{
    u8 luc_DataLen = 0;      //输入数据位数
    
    gb_FlashFlg = FALSE;
    
//    if (gu16_KeyCode == K_RIGHT)
//    {
//        gu8_Item = gu8_SetupRightItem[gu8_Item];    //获取按→键的项目
//        ulParameter.ul = GetSetupItemValue(gu8_Item);
//        gu8_DataInLength = 0;
//        gb_FirstNumKeyFlg = TRUE;
//    }
    switch (gu8_Item)
    {
        case SETUP_CHECKCODE:       //密码输入
            luc_DataLen = 6;
            gb_FirstNumKeyFlg = FALSE;
            break;
//        case DISP_SETUP:
//            if (gu32_Sys10ms - gu32_TimeDelay >= 100)
//            {
//                gb_FirstNumKeyFlg = TRUE;
//                gu8_Item = SETUP_F1;
//            }
//            break;
//        case SETUP_F2_1:        //单桶最大容量
//            luc_DataLen = 6;        //输入
//            break;
//        case SETUP_F4_1:           //串行口1设备号
//        case SETUP_F5_1:           //串行口2设备号
//        case SETUP_F2_4:              //清零范围
//        case SETUP_F2_5:              //自动清零间隔
//        case SETUP_F1_6:              //卸料互锁
//            luc_DataLen = 2;        //输入
//            break;
//        case SETUP_F4_5:           //串行口1 HiLo
//        case SETUP_F5_5:           //串行口2 HiLo
//        case SETUP_F4_6:           //串行口1自动打印开关
//        case SETUP_F5_6:           //串行口2自动打印开关
//        case SETUP_F3_1:              //上电自动清零开关
//        case SETUP_F3_2:             //手动卸料累计开关
//        case SETUP_F3_3:        //累计舍去小数点
//        case SETUP_F3_4:        //累计查询密码开关
//        case SETUP_F3_5:        //累计清除密码开关
//        case SETUP_F3_6:        //开关量测试密码开关
//        case SETUP_F3_7:              //开关量自定义开关
//        case SETUP_F3_8:        //定值重量保持开关
//        case SETUP_F3_9:        //上电黑屏开关
//        case SETUP_F1_3:              //投料方式
//        case SETUP_F1_2:             //毛净重模式
//        case SETUP_F6:             //密码开关
//            ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 1);      //两项切换，用↑键修改
//            break;
//        case SETUP_F1_1:             //秤体模式
//        case SETUP_F3_10:             //无斗A+B同时松袋开关
//            ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 2);      //3项切换，用↑键修改
//            break;
//        case SETUP_F1_4:             //运行状态显示选项
//            ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 3);      //4项切换，用↑键修改
//            break;
//        case SETUP_F4_3:           //串行口1通讯方式
//        case SETUP_F5_3:           //串行口2通讯方式
//            ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 4);      //五项切换，用↑键修改
//            break;
//        case SETUP_F4_2:           //串行口1波特率
//        case SETUP_F5_2:           //串行口2波特率
//            ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 5);      //6项切换，用↑键修改
//            break;
//        case SETUP_F4_4:           //串行口1校验方式
//            if (gu32_ComMode_1 == COM_BUS)
//                ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 3);      //modbus通讯只能选择数据位是8位的检验方式
//            else
//                ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 6);
//            break;  
//        case SETUP_F5_4:           //串行口2校验方式
//            if (gu32_ComMode_2 == COM_BUS)
//                ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 3);      //modbus通讯只能选择数据位是8位的检验方式
//            else
//                ulParameter.ul = Data_IncInput(ulParameter.ul, 0, 6);
//            break;  
//        case SETUP_F2_2:              //零点跟踪范围
//        case SETUP_F2_3:              //判稳范围
//        case SETUP_F2_6:              //AD数字滤波级数
//        case SETUP_F1_5:             //流量采样窗口长度
//            luc_DataLen = 1;
//            break;
//        case SETUP_F6_1:
//            gb_FirstNumKeyFlg = FALSE;
//            if (gu16_KeyCode == K_SET)           //进入密码设置状态
//                gb_SetFlg = TRUE;
//            if (gb_SetFlg)
//            {
//                if (gu16_KeyCode == K_ESC)       //退出密码设置状态
//                {
//                    gb_SetFlg = FALSE;
//                    gu16_KeyCode = 0;
//                    gu8_SetupInTime = 0;
//                    gu8_DataInLength = 0;
//                }
//                else
//                    luc_DataLen = 6;
//            }
//            break;
        default:
            break;
    }
    
    //数据输入
    ulParameter.ul = Key_NumInput(ulParameter.ul, luc_DataLen);
    
    //每一项下的按键处理程序
    switch(gu16_KeyCode)
    {
//        case K_ESC:             //退出键处理
//            gb_SetFlg = FALSE;
//            gb_FirstNumKeyFlg = TRUE;
//            
//            if (gu8_Item == SETUP_F6_1)        //密码设置状态下退出到F12
//            {
//                gu8_SetupInTime = 0;                //清除密码输入错误次数计数器
//                gu8_DataInLength = 0;               //清除数据输入位数
//                gu8_Item = SETUP_F6;
//            }
//            else if (gu8_Item >= SETUP_F5_1 && gu8_Item <= SETUP_F5_6)
//                gu8_Item = SETUP_F5;
//            else if (gu8_Item >= SETUP_F4_1 && gu8_Item <= SETUP_F4_6)
//                gu8_Item = SETUP_F4;
//            else if (gu8_Item >= SETUP_F3_1 && gu8_Item <= SETUP_F3_10)
//                gu8_Item = SETUP_F3;
//            else if (gu8_Item >= SETUP_F2_1 && gu8_Item <= SETUP_F2_6)
//                gu8_Item = SETUP_F2;
//            else if (gu8_Item >= SETUP_F1_1 && gu8_Item <= SETUP_F1_6)
//                gu8_Item = SETUP_F1;
//            else
//            {
//                gu32_SysWorkState = STOPSTATE;
//                AutoWorkMode();	//自动调整工作模式
//            }
//            ulParameter.ul = GetSetupItemValue(gu8_Item);
//            break;
        case K_ENTER:           //确认键处理
            gb_FirstNumKeyFlg = TRUE;
            switch(gu8_Item)
            {
                case SETUP_CHECKCODE:       //密码输入
                    gu8_SetupInTime++;
                    if ((ulParameter.ul == gu32_SetupCode && gu8_DataInLength ==6) || 
                        (ulParameter.ul == SUPERCODE && gu8_DataInLength ==6))        //输入密码等于设定密码或超级密码
                    {
                        gu8_SetupInTime = 0;            //清除密码输入错误次数计数器
                        ulParameter.ul = 0;
                        gu32_TimeDelay = gu32_Sys10ms;
                    }
                    else if (gu8_SetupInTime >= 3)      //密码输入错误超过3次
                    {
                        ErrorDeal(MDP_A, 4, 0);        //显示error4
                        Disp_Error();
                        VFD_CopyDispArryToDispRam();
                        VFD_WriteDispRamArry();
                        while(1);
                    }
                    else            //密码输入错误，提示error
                    {
                        ErrorDeal(MDP_A, 0, 100);
                        ulParameter.ul = 0;
                        gu8_DataInLength = 0;
                        return;
                    }
                    break;
//                case SETUP_F6_1:           //密码设置状态
//                    if (gb_SetFlg == TRUE)
//                    {
//                        gu8_SetupInTime++;
//                        if (gu8_SetupInTime >= 2)
//                        {
//                            if (ulParameter.ul == gu32_DataTemp && gu8_DataInLength == 6)         //两次输入的密码一致
//                            {
//                                gu8_SetupInTime = 0;
//                                gb_SetFlg = FALSE;
//                                gu32_SetupCode = ulParameter.ul;
//                                FM_WriteDW(FMAddr_SetupCode, gu32_SetupCode);          //保存密码
//                            }
//                            else
//                            {
//                                gu8_SetupInTime = 0;
//                                ErrorDeal(MDP_A, 0, 100);
//                                gb_FirstNumKeyFlg = TRUE;
//                                ulParameter.ul = 0;
//                                gu8_DataInLength = 0;
//                                return;
//                            }
//                        }
//                        else
//                        {
//                            if (gu8_DataInLength == 6)      //密码输入必须6位
//                            {
//                                gu32_DataTemp = ulParameter.ul;      //暂存第一次密码设置值
//                                ulParameter.ul = 0;
//                                gu8_DataInLength = 0;
//                                return;
//                            }
//                            else
//                            {
//                                gu8_SetupInTime = 0;
//                                ErrorDeal(MDP_A, 0, 100);
//                                gb_FirstNumKeyFlg = TRUE;
//                                ulParameter.ul = 0;
//                                gu8_DataInLength = 0;
//                                return;
//                            }
//                        }
//                    }
//                    break;
//                case SETUP_F4_1:           //串行口1秤号
//                case SETUP_F5_1:           //串行口1秤号
//                case SETUP_F2_3:              //判稳范围
//                case SETUP_F2_4:              //清零范围
//                    if (ulParameter.ul == 0)            //这些参数值不能为0
//                    {
//                        ErrorDeal(MDP_A, 0, 100);    //显示error
//                        return;
//                    }
//                    break;
//                case SETUP_F2_1:              //清零范围
//                    if (ulParameter.ul > gu32_CalCap)            //这些参数值不能为0
//                    {
//                        ErrorDeal(MDP_A, 0, 100);    //显示error
//                        return;
//                    }
//                    break;
//                case SETUP_F1_5:             //流量采样窗口长度
//                    if (ulParameter.ul > 6 || ulParameter.ul < 1)   //1~6
//                    {
//                        ErrorDeal(MDP_A, 0, 100);    //显示error
//                        return;
//                    }
//                    break;
//                case SETUP_F4_3:      //通讯方式由Print,read或cont改为bus后，校验数据7位的话默认改为18E1
//                    if (ulParameter.ul == COM_BUS && gu32_ComMode_1 != COM_BUS)
//                    {
//                        if (gu32_ParityMode_1 > 3)
//                        {
//                            gu32_ParityMode_1 = 1;
//                            FM_WriteDW(FMAddr_ParityMode_1, gu32_ParityMode_1);
//                        }
//                    }
//                    break;
//                case SETUP_F5_3:      //通讯方式由Print,read或cont改为bus后，校验数据7位的话默认改为18E1
//                    if (ulParameter.ul == COM_BUS && gu32_ComMode_2 != COM_BUS)
//                    {
//                        if (gu32_ParityMode_2 > 3)
//                        {
//                            gu32_ParityMode_2 = 1;
//                            FM_WriteDW(FMAddr_ParityMode_2, gu32_ParityMode_2);
//                        }
//                    }
//                    break;
//                case SETUP_F1_1:     
//                    //有斗秤改无斗秤、散料秤判断工作模式是否合理
//                    if (ulParameter.ul == BINNO && gu32_TareMode != BINNO)
//                    {
//                      /*WM_ONLY_A      0
//                        WM_ONLY_B      1
//                        WM_A_ADD       2
//                        WM_B_ADD       3
//                        WM_A_B         4
//                        WM_A_ADD_B     5*/
//                        if (gu32_WorkMode < 4)  //无斗只有AB和A+B，如不合理则改为AB模式
//                            gu32_WorkMode = WM_A_B;
//                    }
//                    else if (ulParameter.ul == BULK && gu32_TareMode != BULK)
//                    {
//                        //散料秤模式没有A+和B+模式
//                        if (gu32_WorkMode == WM_A_ADD || gu32_WorkMode == WM_B_ADD)
//                            gu32_WorkMode = WM_A_B;
//                    }
//                    //模式改变后清除累计、批次、流量
//                    if (ulParameter.ul != gu32_TareMode)
//                    {
//                        //累计
//                        ClrSum();
//                        //批次
//                        gu32_BatchTime = 0;
//                        gu32_BatchTimeCnt = 0;
//                        FM_WriteDW(FMAddr_BatchTime, gu32_BatchTime);
//                        FM_WriteDW(FMAddr_BatchTimeCnt, gu32_BatchTimeCnt);
//                        //流量
//                        gu32_FluxValue = 0;
//                    }
//                    IoDefPointerRefresh(ulParameter.ul);  //更新开关量自定义数组指针
//                    break;
//                default:
//                    break;
            }
//            if ((gu8_Item != SETUP_CHECKCODE) && (gu8_Item != SETUP_F1) &&
//                (gu8_Item != SETUP_F2) && (gu8_Item != SETUP_F3) && 
//                (gu8_Item != SETUP_F4) && (gu8_Item != SETUP_F5))
//                FM_WriteDW(GetSetupPort(gu8_Item), ulParameter.ul);         //保存设置的工作参数值
//            //修改串口相关参数要重新初始化串口
//            if (gu8_Item == SETUP_F4_4 || gu8_Item == SETUP_F4_2 || gu8_Item == SETUP_F4_3)
//                Uart1_Init();
//            if (gu8_Item == SETUP_F5_4 || gu8_Item == SETUP_F5_2 || gu8_Item == SETUP_F5_3)
//                Uart0_Init();
//            if (gu8_Item == SETUP_F6 && ulParameter.ul == 0)
//                gu8_Item = SETUP_F1;
//            else
//                gu8_Item = gu8_SetupEnterItem[gu8_Item];         //进入下一项
////            if (gu8_Item >= SETUP_END)
////                gu8_Item = SETUP_F2_2;
////            if ((gu32_SetupCodeSwitch == 0) && (gu8_Item == SETUP_F6_1))    //密码开关关闭时按enter键跳到F1
////                gu8_Item = SETUP_F2_2;
//            //串口设置开关为OFF时跳过其中的小项设置
////            if ((gu32_UartSwitch_1 == 0 && gu8_Item == SETUP_F4_1) || (gu32_UartSwitch_2 == 0 && gu8_Item == SETUP_F5_1))
////                gu8_Item += 6;
//            ulParameter.ul = GetSetupItemValue(gu8_Item);
//            gu8_DataInLength = 0;
//            gb_FirstNumKeyFlg = TRUE;
//            break;
        default:
            break;
    }
}

/*********************************************************************
函数名称: void Disp_SetupState(void)
功    能: 工作参数显示相关
说    明: 
入口参数: 
返 回 值: 
设    计: chx                  时    间: 2013-12-19
修    改:                      时    间: 
*********************************************************************/
void Disp_SetupState(void)
{
    u8 luc_DispNumber = 0;       //显示位数
    u8 luc_Point = 0;
    u16 lu16_RealItem = gu16_SetupRealItem[gu8_Item];
    
    gb_FlashFlg = FALSE;
    //Fxx的显示
//    if (gu8_Item != DISP_SETUP)
//    {
//        if (lu16_RealItem > 100)    //F3.10
//        {
//            g_UCurrDisp.SB[2] = SEG_F;
//            g_UCurrDisp.SB[3] = Value_To_SEG[lu16_RealItem / 100] | 0x80;
//            g_UCurrDisp.SB[4] = Value_To_SEG[lu16_RealItem % 100 / 10];
//            g_UCurrDisp.SB[5] = Value_To_SEG[lu16_RealItem % 10];
//        }
//        else if (lu16_RealItem % 10 == 0)  //大项，如F1/F2/F3...
//        {
//            g_UCurrDisp.SB[4] = SEG_F;
//            g_UCurrDisp.SB[5] = Value_To_SEG[lu16_RealItem / 10];
//        }
//        else    //小项 如F1.1/F1.2...
//        {
//            g_UCurrDisp.SB[3] = SEG_F;
//            g_UCurrDisp.SB[4] = Value_To_SEG[lu16_RealItem % 100 / 10] | 0x80;;
//            g_UCurrDisp.SB[5] = Value_To_SEG[lu16_RealItem % 10];
//        }
//    }
    
    switch (gu8_Item)
    {
        case SETUP_CHECKCODE:       //密码输入
            Disp_InputCode();       //密码输入显示处理
            gb_FlashFlg = TRUE;
            break;
//        case DISP_SETUP:
//            g_UCurrDisp.SA[0] = SEG_S;
//            g_UCurrDisp.SA[1] = SEG_E;
//            g_UCurrDisp.SA[2] = SEG_t;
//            g_UCurrDisp.SA[3] = SEG_BLK;
//            g_UCurrDisp.SA[4] = SEG_U;
//            g_UCurrDisp.SA[5] = SEG_P;
//            
//            if (gu32_TareMode == BINYES)    //有计量斗
//            {
//                g_UCurrDisp.SB[0] = SEG_b;
//                g_UCurrDisp.SB[1] = SEG_i;
//                g_UCurrDisp.SB[2] = SEG_n;
//                g_UCurrDisp.SB[3] = SEG_y;
//                g_UCurrDisp.SB[4] = SEG_E;
//                g_UCurrDisp.SB[5] = SEG_S;
//            }
//            else if (gu32_TareMode == BINNO)    //无计量斗
//            {
//                g_UCurrDisp.SB[0] = SEG_b;
//                g_UCurrDisp.SB[1] = SEG_i;
//                g_UCurrDisp.SB[2] = SEG_n;
//                g_UCurrDisp.SB[3] = SEG_BLK;
//                g_UCurrDisp.SB[4] = SEG_n;
//                g_UCurrDisp.SB[5] = SEG_o;
//            }
//            else    //散料秤
//            {
//                g_UCurrDisp.SB[0] = SEG_BLK;
//                g_UCurrDisp.SB[1] = SEG_BLK;
//                g_UCurrDisp.SB[2] = SEG_b;
//                g_UCurrDisp.SB[3] = SEG_U;
//                g_UCurrDisp.SB[4] = SEG_L;
//                g_UCurrDisp.SB[5] = SEG_K;
//            }
//            
//            break;
//        case SETUP_F1:
//            g_UCurrDisp.SA[0] = SEG_M;
//            g_UCurrDisp.SA[1] = SEG_o;
//            g_UCurrDisp.SA[2] = SEG_d;
//            g_UCurrDisp.SA[3] = SEG_E;
//            break;
//        case SETUP_F2:
//            g_UCurrDisp.SA[0] = SEG_b;
//            g_UCurrDisp.SA[1] = SEG_A;
//            g_UCurrDisp.SA[2] = SEG_S;
//            g_UCurrDisp.SA[3] = SEG_E;
//            break;
//        case SETUP_F3:
//            g_UCurrDisp.SA[0] = SEG_S;
//            g_UCurrDisp.SA[1] = SEG_W;
//            g_UCurrDisp.SA[2] = SEG_i;
//            g_UCurrDisp.SA[3] = SEG_t;
//            g_UCurrDisp.SA[4] = SEG_C;
//            g_UCurrDisp.SA[5] = SEG_h;
//            break;
//        case SETUP_F4:
//            g_UCurrDisp.SA[0] = SEG_U;
//            g_UCurrDisp.SA[1] = SEG_A;
//            g_UCurrDisp.SA[2] = SEG_r;
//            g_UCurrDisp.SA[3] = SEG_t;
//            g_UCurrDisp.SA[4] = SEG_1;
//            break;
//        case SETUP_F5:
//            g_UCurrDisp.SA[0] = SEG_U;
//            g_UCurrDisp.SA[1] = SEG_A;
//            g_UCurrDisp.SA[2] = SEG_r;
//            g_UCurrDisp.SA[3] = SEG_t;
//            g_UCurrDisp.SA[4] = SEG_2;
//            break;
//        case SETUP_F2_1:           //单桶最大容量
//            luc_DispNumber = 6;
//            luc_Point = gu32_CalPoint;
//            gb_FlashFlg = TRUE;
//            break;
//        case SETUP_F4_1:           //串行口1秤号
//        case SETUP_F5_1:           //串行口2秤号
//        case SETUP_F2_4:              //清零范围
//        case SETUP_F2_5:              //自动清零间隔
//            luc_DispNumber = 2;
//            gb_FlashFlg = TRUE;
//            break;
//        case SETUP_F2_2:              //零点跟踪范围
//        case SETUP_F2_3:              //判稳范围
//        case SETUP_F2_6:              //AD数字滤波级数
//        case SETUP_F1_5:             //流量采样窗口长度
//            luc_DispNumber = 1;
//            gb_FlashFlg = TRUE;
//            break;
//        case SETUP_F1_6:              //卸料互锁
//            luc_DispNumber = 2;     //时间设置 x.x 两位数，小数点为1
//    	    luc_Point = 1;
//    	    gb_FlashFlg = TRUE;
//    	    break;
//        case SETUP_F4_6:           //串行口1打印开关
//        case SETUP_F5_6:           //串行口2打印开关
//        case SETUP_F3_1:              //上电自动清零开关
//        case SETUP_F3_2:             //手动卸料累计开关
//        case SETUP_F3_3:        //累计舍去小数点
//        case SETUP_F3_4:        //累计查询密码开关
//        case SETUP_F3_5:        //累计清除密码开关
//        case SETUP_F3_6:        //开关量测试密码开关
//        case SETUP_F3_7:              //开关量自定义开关
//        case SETUP_F3_8:        //定值重量保持开关
//        case SETUP_F3_9:        //上电黑屏开关
//        case SETUP_F6:             //密码开关
//            Disp_OnOff(ulParameter.ul);           //显示开关
//            break;
//        case SETUP_F3_10:             //无斗A+B同时松袋开关
//            Disp_On12Off(ulParameter.ul);           //显示开关
//            break;
//        case SETUP_F1_1:
//            Disp_TareMode(ulParameter.ul);        //显示binyes binno
//            break;
//        case SETUP_F1_2:
//            Disp_GorNMode(ulParameter.ul);        //显示gross net
//            break;
//        case SETUP_F4_2:
//        case SETUP_F5_2:
//            Disp_BaudRate(ulParameter.ul);        //波特率显示
//            break;
//        case SETUP_F4_3:
//        case SETUP_F5_3:
//            Disp_ComMode(ulParameter.ul);         //显示通讯方式
//            break;
//        case SETUP_F1_3:
//            Disp_FeedMode(ulParameter.ul);        //投料方式
//            break;
//        case SETUP_F4_4:
//        case SETUP_F5_4:
//            Disp_ParityMode(ulParameter.ul);      //校验方式
//            break;
//        case SETUP_F4_5:
//        case SETUP_F5_5:
//            Disp_HiLo(ulParameter.ul);            //HiLo
//            break;
//        case SETUP_F1_4:
//            Disp_RunDispType(ulParameter.ul);            //运行状态显示选项
//            break;
//        case SETUP_F6_1:
//            Disp_InputCode();       //密码输入显示处理
//            g_UCurrDisp.SB[2] = SEG_BLK;
//            g_UCurrDisp.SB[3] = SEG_F;
//            g_UCurrDisp.SB[4] = Value_To_SEG[lu16_RealItem % 100 / 10] | 0x80;;
//            g_UCurrDisp.SB[5] = Value_To_SEG[lu16_RealItem % 10];
//            if (gb_SetFlg == TRUE)
//                gb_FlashFlg = TRUE;
//            break;
    }
    
    switch (gu8_Item)
    {
        case SETUP_CHECKCODE:       //密码输入
//        case SETUP_F6_1:           //密码设置
//            Flash_MDisp(MDP_A, 0x01);                //闪烁处理
//            break;
//        case SETUP_F2_1:        //单桶最大容量
//        case SETUP_F4_1:           //串行口1秤号
//        case SETUP_F5_1:           //串行口2秤号
//        case SETUP_F2_4:              //清零范围
//        case SETUP_F2_5:              //自动清零间隔
//        case SETUP_F2_2:              //零点跟踪范围
//        case SETUP_F2_3:              //判稳范围
//        case SETUP_F2_6:              //AD数字滤波级数
//        case SETUP_F1_6:              //卸料互锁
//        case SETUP_F1_5:             //流量采样窗口长度
//            MDisp_Data(MDP_A, luc_Point, FALSE, FALSE, luc_DispNumber, ulParameter.ul);       //A显示值
//            Flash_MDisp(MDP_A, 0x01);                //闪烁处理
//            break;
        default:
            break;
    }
}

