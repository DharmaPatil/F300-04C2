


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2007 STMicroelectron
                       ics ********************
    2 00000000         ;* File Name          : 71x_init.s
    3 00000000         ;* Author             : MCD Application Team
    4 00000000         ;* Version            : V4.0
    5 00000000         ;* Date               : 10/09/2007
    6 00000000         ;* Description        : This module performs:
    7 00000000         ;*                      - Memory remapping (if required)
                       ,
    8 00000000         ;*                      - Stack pointer initialisation f
                       or each mode ,
    9 00000000         ;*                      - Interrupt Controller Initialis
                       ation
   10 00000000         ;*                      - Branches to ?main in the C lib
                       rary (which eventually
   11 00000000         ;*                        calls main()).
   12 00000000         ;*   On reset, the ARM core starts up in Supervisor (SVC
                       ) mode,
   13 00000000         ;*   in ARM state,with IRQ and FIQ disabled.
   14 00000000         ;*******************************************************
                       ************************
   15 00000000         ; THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS A
                       T PROVIDING CUSTOMERS
   16 00000000         ; WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN OR
                       DER FOR THEM TO SAVE TIME.
   17 00000000         ; AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIAB
                       LE FOR ANY DIRECT,
   18 00000000         ; INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY 
                       CLAIMS ARISING FROM THE
   19 00000000         ; CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOM
                       ERS OF THE CODING
   20 00000000         ; INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR 
                       PRODUCTS.
   21 00000000         ;*******************************************************
                       ************************        
   22 00000000         
   23 00000000                 IMPORT           T0TIMI_Addr
   24 00000000         
   25 00000000                 EXPORT           __user_initial_stackheap
   26 00000000                 EXPORT           __initial_sp
   27 00000000         
   28 00000000                 EXPORT           Reset_Handler
   29 00000000         
   30 00000000         
   31 00000000         ; Depending on Your Application, Disable or Enable the f
                       ollowing Defines
   32 00000000         ; ------------------------------------------------------
                       ----------------------
   33 00000000         ;                      EMI Bank1 configuration
   34 00000000         ; ------------------------------------------------------
                       ----------------------
   35 00000000         ;GBLL EMI_INIT      ; Initialize EMI pins and configure 
                       bank1
   36 00000000         ; ------------------------------------------------------
                       ----------------------
   37 00000000         ;                      EIC initialization
   38 00000000         ; ------------------------------------------------------
                       ----------------------
   39 00000000                 GBLL             EIC_INIT    ; Configure and Ini



ARM Macro Assembler    Page 2 


                                                            tialize EIC
   40 00000000         ; ------------------------------------------------------
                       ----------------------
   41 00000000         ;                      Peripheral  configuration
   42 00000000         ; ------------------------------------------------------
                       ----------------------    
   43 00000000         ; Uncomment next ligne if you need to disable all device
                        peripherals
   44 00000000                 GBLL             PERIPHERAL_INIT ; Disable all d
                                                            evice peripherals e
                                                            xcept EIC
   45 00000000         
   46 00000000         ; ------------------------------------------------------
                       ----------------------
   47 00000000         ;                      Memory remapping
   48 00000000         ; ------------------------------------------------------
                       ----------------------
   49 00000000         ; If you need to remap memory before entring the main pr
                       ogram
   50 00000000         ; uncomment next ligne
   51 00000000         ;GBLL  remapping          
   52 00000000         ; ------------------------------------------------------
                       ----------------------
   53 00000000         ;GBLL  remap_ram    ; remap SRAM at address 0x00 
   54 00000000         ; ------------------------------------------------------
                       ----------------------
   55 00000000         ;GBLL  remap_flash  ; remap FLASH at address 0x00
   56 00000000         
   57 00000000         
   58 00000000         ; --- Standard definitions of mode bits and interrupt (I
                        & F) flags in PSRs       
   59 00000000         
   60 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   61 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   62 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   63 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   64 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   65 00000000 0000001B 
                       Mode_UNDEF
                               EQU              0x1B
   66 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F        ; available on ARM 
                                                            Arch 4 and later
   67 00000000         
   68 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   69 00000000 00000040 



ARM Macro Assembler    Page 3 


                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   70 00000000         
   71 00000000         
   72 00000000         ; --- System memory locations
   73 00000000         
   74 00000000 20000000 
                       RAM_Base
                               EQU              0x20000000
   75 00000000 20010000 
                       RAM_Limit
                               EQU              0x20010000
   76 00000000 60000000 
                       SRAM_Base
                               EQU              0x60000000
   77 00000000 20010000 
                       Stack_Base
                               EQU              RAM_Limit
   78 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   79 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   80 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   81 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   82 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   83 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   84 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   85 00000000         ;// </h>
   86 00000000         
   87 00000000 00001000 
                       USR_Stack_Length
                               EQU              4096
   88 00000000 00000400 
                       IRQ_Stack_Length
                               EQU              1024
   89 00000000 00000100 
                       SVC_Stack_Length
                               EQU              256
   90 00000000 00000100 
                       FIQ_Stack_Length
                               EQU              256
   91 00000000 00000100 
                       ABT_Stack_Length
                               EQU              256
   92 00000000 00000100 
                       UNDEF_Stack_Length
                               EQU              256
   93 00000000         
   95 00000000 00001800 
                       ISR_Stack_Size
                               EQU              (USR_Stack_Length + IRQ_Stack_L
ength + SVC_Stack_Length +                           FIQ_Stack_Length + ABT_St
ack_Length + UNDEF_Stack_Length)
   96 00000000 20010000 
                       USR_Stack
                               EQU              Stack_Base  ; USR stack
   97 00000000 2000F000 
                       IRQ_Stack
                               EQU              USR_Stack-USR_Stack_Length ; fo
                                                            llowed by IRQ stack
                                                            



ARM Macro Assembler    Page 4 


   98 00000000 2000EC00 
                       SVC_Stack
                               EQU              IRQ_Stack-IRQ_Stack_Length ; fo
                                                            llowed by SVC stack
                                                            
   99 00000000 2000EB00 
                       FIQ_Stack
                               EQU              SVC_Stack-SVC_Stack_Length ; fo
                                                            llowed by FIQ stack
                                                            
  100 00000000 2000EA00 
                       ABT_Stack
                               EQU              FIQ_Stack-FIQ_Stack_Length ; fo
                                                            llowed by ABT stack
                                                            
  101 00000000 2000E900 
                       UNDEF_Stack
                               EQU              ABT_Stack-ABT_Stack_Length ; fo
                                                            llowed by UNDEF sta
                                                            ck
  102 00000000         
  103 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
  104 00000000         
  105 00000000         Stack_Mem
                               SPACE            USR_Stack_Length
  106 00001000         __initial_sp
                               SPACE            ISR_Stack_Size
  107 00002800         
  108 00002800         Stack_Top
  109 00002800         
  110 00002800         
  111 00002800         ;// <h> Heap Configuration
  112 00002800         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
  113 00002800         ;// </h>
  114 00002800         
  115 00002800 00000400 
                       Heap_Size
                               EQU              0x00000400
  116 00002800         
  117 00002800                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
  118 00000000         __heap_base
  119 00000000         Heap_Mem
                               SPACE            Heap_Size
  120 00000400         __heap_limit
  121 00000400         
  122 00000400 FFFFF800 
                       EIC_Base_addr
                               EQU              0xFFFFF800  ; EIC base address
  123 00000400 00000000 
                       ICR_off_addr
                               EQU              0x00        ; Interrupt Control
                                                             register offset
  124 00000400 00000008 
                       CIPR_off_addr
                               EQU              0x08        ; Current Interrupt
                                                             Priority Register 
                                                            offset



ARM Macro Assembler    Page 5 


  125 00000400 00000018 
                       IVR_off_addr
                               EQU              0x18        ; Interrupt Vector 
                                                            Register offset
  126 00000400 0000001C 
                       FIR_off_addr
                               EQU              0x1C        ; Fast Interrupt Re
                                                            gister offset
  127 00000400 00000020 
                       IER_off_addr
                               EQU              0x20        ; Interrupt Enable 
                                                            Register offset
  128 00000400 00000040 
                       IPR_off_addr
                               EQU              0x40        ; Interrupt Pending
                                                             Bit Register offse
                                                            t
  129 00000400 00000060 
                       SIR0_off_addr
                               EQU              0x60        ; Source Interrupt 
                                                            Register 0
  130 00000400         
  131 00000400 6C000000 
                       EMI_Base_addr
                               EQU              0x6C000000  ; EMI base address
  132 00000400 00000000 
                       BCON0_off_addr
                               EQU              0x00        ; Bank 0 configurat
                                                            ion register offset
                                                            
  133 00000400 00000004 
                       BCON1_off_addr
                               EQU              0x04        ; Bank 1 configurat
                                                            ion register offset
                                                            
  134 00000400 00000008 
                       BCON2_off_addr
                               EQU              0x08        ; Bank 2 configurat
                                                            ion register offset
                                                            
  135 00000400 0000000C 
                       BCON3_off_addr
                               EQU              0x0C        ; Bank 3 configurat
                                                            ion register offset
                                                            
  136 00000400         
  137 00000400 00008000 
                       EMI_ENABLE
                               EQU              0x8000
  138 00000400 00000001 
                       EMI_SIZE_16
                               EQU              0x0001
  139 00000400         
  140 00000400 E0005000 
                       GPIO2_Base_addr
                               EQU              0xE0005000  ; GPIO2 base addres
                                                            s
  141 00000400 00000000 
                       PC0_off_addr



ARM Macro Assembler    Page 6 


                               EQU              0x00        ; Port Configuratio
                                                            n Register 0 offset
                                                            
  142 00000400 00000004 
                       PC1_off_addr
                               EQU              0x04        ; Port Configuratio
                                                            n Register 1 offset
                                                            
  143 00000400 00000008 
                       PC2_off_addr
                               EQU              0x08        ; Port Configuratio
                                                            n Register 2 offset
                                                            
  144 00000400 0000000C 
                       PD_off_addr
                               EQU              0x0C        ; Port Data Registe
                                                            r offset
  145 00000400         
  146 00000400 A0000040 
                       CPM_Base_addr
                               EQU              0xA0000040  ; CPM Base Address
  147 00000400 00000010 
                       BOOTCR_off_addr
                               EQU              0x10        ; CPM - Boot Config
                                                            uration Register
  148 00000400 00000000 
                       FLASH_mask
                               EQU              0x0000      ; to remap FLASH at
                                                             0x0
  149 00000400 00000002 
                       RAM_mask
                               EQU              0x0002      ; to remap RAM at 0
                                                            x0
  150 00000400 00000003 
                       EXTMEM_mask
                               EQU              0x0003      ; to remap EXTMEM a
                                                            t 0x0
  151 00000400         
  152 00000400 00000014 
                       RCCU_PER_Init
                               EQU              0x14        ; to init RCCU_PER 
                                                            register to reduce 
                                                            power consumption
  153 00000400 A0000000 
                       RCCU_PER_Base_addr
                               EQU              0xA0000000  ; RCCU_PER base add
                                                            ress
  154 00000400 0000001C 
                       RCCU_PER_off_addr
                               EQU              0x1C        ; RCCU_PER register
                                                             offset
  155 00000400         
  156 00000400         ; APB Bridge  (System Peripheral) 
  157 00000400 C0000000 
                       APB1_base_addr
                               EQU              0xC0000000  ; APB Bridge1 Base 
                                                            Address
  158 00000400 E0000000 
                       APB2_base_addr



ARM Macro Assembler    Page 7 


                               EQU              0xE0000000  ; APB Bridge2 Base 
                                                            Address
  159 00000400 00000010 
                       CKDIS_off_addr
                               EQU              0x10        ; APB Bridge1 - Clo
                                                            ck Disable  Registe
                                                            r
  160 00000400 000027FB 
                       CKDIS1_config_all
                               EQU              0x27FB      ; To disable clock 
                                                            of all APB1's perip
                                                            herals
  161 00000400 00001FDD 
                       CKDIS2_config_all
                               EQU              0x1FDD      ; To disable clock 
                                                            of all APB2's perip
                                                            herals
  162 00000400         ; except EIC    
  163 00000400         
  164 00000400         
  165 00000400                 PRESERVE8
  166 00000400                 AREA             Init, CODE, READONLY
  167 00000000         
  168 00000000         Reset_Handler
  169 00000000 E59FF0C4        LDR              pc, =NextInst
  170 00000004         NextInst
  171 00000004 E1A00000        NOP                          ; Wait for OSC stab
                                                            ilization
  172 00000008 E1A00000        NOP
  173 0000000C E1A00000        NOP
  174 00000010 E1A00000        NOP
  175 00000014 E1A00000        NOP
  176 00000018 E1A00000        NOP
  177 0000001C E1A00000        NOP
  178 00000020 E1A00000        NOP
  179 00000024 E1A00000        NOP
  180 00000028         
  181 00000028 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
  182 0000002C E59FD09C        LDR              SP, = FIQ_Stack & 0xFFFFFFF8 
                                                            ; End of FIQ_STACK
  183 00000030         
  184 00000030 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
  185 00000034 E59FD098        LDR              SP, = IRQ_Stack & 0xFFFFFFF8 
                                                            ; End of FIQ_STACK
  186 00000038         
  187 00000038 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
  188 0000003C E59FD094        LDR              SP, = ABT_Stack & 0xFFFFFFF8 
                                                            ; End of FIQ_STACK
  189 00000040         
  190 00000040 E321F0DB        MSR              CPSR_c, #Mode_UNDEF:OR:I_Bit:OR
:F_Bit 
                                                            ; No interrupts
  191 00000044 E59FD090        LDR              SP, = UNDEF_Stack & 0xFFFFFFF8 



ARM Macro Assembler    Page 8 


                                                            ; End of FIQ_STACK
  192 00000048         
  193 00000048 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit 
                                                            ; No interrupts
  194 0000004C E59FD08C        LDR              SP, = SVC_Stack & 0xFFFFFFF8 ; 
                                                            End of FIQ_STACK  
  195 00000050         
  196 00000050         ; ------------------------------------------------------
                       ------------------------
  197 00000050         ; Description  : EMI_INIT. Initialize EMI bank 1: 16-bit
                        15 wait state
  198 00000050         ; ------------------------------------------------------
                       ------------------------
  199 00000050                 IF               :DEF: EMI_INIT
  213                          ENDIF
  214 00000050         
  215 00000050         ;-------------------------------------------------------
                       ------------------------
  216 00000050         ;Description  : Initialize the EIC as following :
  217 00000050         ;              - IRQ disabled
  218 00000050         ;              - FIQ disabled
  219 00000050         ;              - IVR contains the load PC opcode
  220 00000050         ;              - All channels are disabled
  221 00000050         ;              - All channels priority equal to 0
  222 00000050         ;              - All SIR registers contains offset to th
                       e related IRQ table entry
  223 00000050         ;-------------------------------------------------------
                       ------------------------
  224 00000050                 IF               :DEF: EIC_INIT
  225 00000050 E59F308C        LDR              r3, =EIC_Base_addr
  226 00000054 E59F408C        LDR              r4, =0xE59F0000
  227 00000058         
  228 00000058 E5834018        STR              r4, [r3, #IVR_off_addr] ; Write
                                                             the LDR pc,[pc,#of
                                                            fset]
  229 0000005C         ; instruction code in IVR[31:16]
  230 0000005C E3A02020        LDR              r2, =32     ; 32 Channel to ini
                                                            tialize
  231 00000060 E59F0084        LDR              r0, =T0TIMI_Addr ; Read the add
                                                            ress of the IRQs
  232 00000064         ; address table
  233 00000064 E59F1084        LDR              r1, =0x00000FFF
  234 00000068 E0000001        AND              r0,r0,r1
  235 0000006C E3A05060        LDR              r5, =SIR0_off_addr 
                                                            ; Read SIR0 address
                                                            
  236 00000070 E2404008        SUB              r4,r0,#8    ; Subtract 8 for pr
                                                            efetch
  237 00000074 E59F1078        LDR              r1, =0xF7E8 ; Add the offset fr
                                                            om IVR to 0x0000000
                                                            0
  238 00000078         ; address(IVR address + 7E8 = 0x00000000)
  239 00000078         ; 0xF7E8 used to complete the
  240 00000078         ; LDR pc,[pc,#offset] opcode (0xE59FFXXX)
  241 00000078 E0841001        ADD              r1,r4,r1    ; Compute the jump 
                                                            offset from IVR to 
                                                            the
  242 0000007C         ; IRQ table entry.



ARM Macro Assembler    Page 9 


  243 0000007C E1A04801 
                       EIC_INI MOV              r4, r1, LSL #16 ; Left shift th
                                                            e result
  244 00000080 E7834005        STR              r4, [r3, r5] ; Store the result
                                                             in SIRx register
  245 00000084 E2811004        ADD              r1, r1, #4  ; Next IRQ address
  246 00000088 E2855004        ADD              r5, r5, #4  ; Next SIR
  247 0000008C E2522001        SUBS             r2, r2, #1  ; Decrement the num
                                                            ber of SIR register
                                                            s
  248 00000090         ; to initialize
  249 00000090 1AFFFFF9        BNE              EIC_INI     ; If more then cont
                                                            inue
  250 00000094                 ENDIF
  251 00000094         
  252 00000094         ; ------------------------------------------------------
                       ------------------------
  253 00000094         ; Description  : PERIPHERAL_INIT. Disable all device per
                       ipherals except EIC.
  254 00000094         ; ------------------------------------------------------
                       ------------------------
  255 00000094                 IF               :DEF: PERIPHERAL_INIT
  256 00000094 E3A01103        LDR              r1, =APB1_base_addr ; r1= APB1 
                                                            base address
  257 00000098 E3A0220E        LDR              r2, =APB2_base_addr ; r2= APB2 
                                                            base address
  258 0000009C E59F0054        LDR              r0, =CKDIS1_config_all
  259 000000A0 E1C101B0        STRH             r0, [r1, #CKDIS_off_addr] ; Dis
                                                            able clock for all 
                                                            APB1 peripherals
  260 000000A4 E59F0050        LDR              r0, =CKDIS2_config_all
  261 000000A8 E1C201B0        STRH             r0, [r2, #CKDIS_off_addr] ; Dis
                                                            able clock for all 
                                                            APB2 peripherals
  262 000000AC E3A0120A        LDR              r1, =RCCU_PER_Base_addr ; r1= R
                                                            CCU_PER base addres
                                                            s
  263 000000B0 E3A00014        LDR              r0, =RCCU_PER_Init
  264 000000B4 E1C101BC        STRH             r0, [r1, #RCCU_PER_off_addr] ; 
                                                            To reduce power con
                                                            sumption clear all
  265 000000B8         ; unused bits in the RCCU_PER register
  266 000000B8         ; and keep EMI and USB KERNEL enabled                   
                                             
  267 000000B8                 ENDIF
  268 000000B8         
  269 000000B8         ; ------------------------------------------------------
                       ------------------------
  270 000000B8         ; Description  :  Remapping SRAM, FLASH at address 0x00 
                       after the application has 
  271 000000B8         ;                 started executing. 
  272 000000B8         ; ------------------------------------------------------
                       ------------------------
  273 000000B8                 IF               :DEF: remapping
  288                          ENDIF
  289 000000B8         
  290 000000B8         ; --- Now change to USR/SYS mode and set up User mode st
                       ack,
  291 000000B8         



ARM Macro Assembler    Page 10 


  292 000000B8 E321F01F        MSR              CPSR_c, #Mode_SYS ; IRQs & FIQs
                                                             are now enabled
  293 000000BC E59FD03C        LDR              SP, =USR_Stack ; Initialize USR
                                                             stack pointer
  294 000000C0         
  295 000000C0         ; --- Branch to C Library entry point
  296 000000C0         
  297 000000C0                 IMPORT           __main
  298 000000C0 EAFFFFFE        B                __main
  299 000000C4         
  300 000000C4         
  301 000000C4         ; Implementation of __user_initial_stackheap 
  302 000000C4         
  303 000000C4         __user_initial_stackheap
  304 000000C4         
  305 000000C4 E59F0038        LDR              r0, = RAM_Limit - Heap_Size
  306 000000C8 E1A0F00E        MOV              pc,lr
  307 000000CC         
  308 000000CC         
  309 000000CC         
  310 000000CC 00000000 
              2000EB00 
              2000F000 
              2000EA00 
              2000E900 
              2000EC00 
              FFFFF800 
              E59F0000 
              00000000 
              00000FFF 
              0000F7E8 
              000027FB 
              00001FDD 
              20010000 
              2000FC00         LTORG
  311 00000108         
  312 00000108         
  313 00000108                 END
Command Line: --debug --xref --depend=.\output\71x_init.d -o.\output\71x_init.o
 -I"D:\Keil 5\ARM\RV31\INC" -I"D:\Keil 5\ARM\CMSIS\Include" -I"D:\Keil 5\ARM\In
c\ST\71x" --list=.\71x_init.lst ..\str71x\71x_init.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 103 in file ..\str71x\71x_init.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 105 in file ..\str71x\71x_init.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00002800

Symbol: Stack_Top
   Definitions
      At line 108 in file ..\str71x\71x_init.s
   Uses
      None
Comment: Stack_Top unused
__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 106 in file ..\str71x\71x_init.s
   Uses
      At line 26 in file ..\str71x\71x_init.s
Comment: __initial_sp used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 117 in file ..\str71x\71x_init.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 119 in file ..\str71x\71x_init.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 118 in file ..\str71x\71x_init.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000400

Symbol: __heap_limit
   Definitions
      At line 120 in file ..\str71x\71x_init.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EIC_INI 0000007C

Symbol: EIC_INI
   Definitions
      At line 243 in file ..\str71x\71x_init.s
   Uses
      At line 249 in file ..\str71x\71x_init.s
Comment: EIC_INI used once
Init 00000000

Symbol: Init
   Definitions
      At line 166 in file ..\str71x\71x_init.s
   Uses
      None
Comment: Init unused
NextInst 00000004

Symbol: NextInst
   Definitions
      At line 170 in file ..\str71x\71x_init.s
   Uses
      At line 169 in file ..\str71x\71x_init.s
Comment: NextInst used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 168 in file ..\str71x\71x_init.s
   Uses
      At line 28 in file ..\str71x\71x_init.s
Comment: Reset_Handler used once
__user_initial_stackheap 000000C4

Symbol: __user_initial_stackheap
   Definitions
      At line 303 in file ..\str71x\71x_init.s
   Uses
      At line 25 in file ..\str71x\71x_init.s
Comment: __user_initial_stackheap used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack 2000EA00

Symbol: ABT_Stack
   Definitions
      At line 100 in file ..\str71x\71x_init.s
   Uses
      At line 101 in file ..\str71x\71x_init.s
      At line 188 in file ..\str71x\71x_init.s

ABT_Stack_Length 00000100

Symbol: ABT_Stack_Length
   Definitions
      At line 91 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
      At line 101 in file ..\str71x\71x_init.s

APB1_base_addr C0000000

Symbol: APB1_base_addr
   Definitions
      At line 157 in file ..\str71x\71x_init.s
   Uses
      At line 256 in file ..\str71x\71x_init.s
Comment: APB1_base_addr used once
APB2_base_addr E0000000

Symbol: APB2_base_addr
   Definitions
      At line 158 in file ..\str71x\71x_init.s
   Uses
      At line 257 in file ..\str71x\71x_init.s
Comment: APB2_base_addr used once
BCON0_off_addr 00000000

Symbol: BCON0_off_addr
   Definitions
      At line 132 in file ..\str71x\71x_init.s
   Uses
      None
Comment: BCON0_off_addr unused
BCON1_off_addr 00000004

Symbol: BCON1_off_addr
   Definitions
      At line 133 in file ..\str71x\71x_init.s
   Uses
      None
Comment: BCON1_off_addr unused
BCON2_off_addr 00000008

Symbol: BCON2_off_addr
   Definitions
      At line 134 in file ..\str71x\71x_init.s
   Uses
      None
Comment: BCON2_off_addr unused
BCON3_off_addr 0000000C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: BCON3_off_addr
   Definitions
      At line 135 in file ..\str71x\71x_init.s
   Uses
      None
Comment: BCON3_off_addr unused
BOOTCR_off_addr 00000010

Symbol: BOOTCR_off_addr
   Definitions
      At line 147 in file ..\str71x\71x_init.s
   Uses
      None
Comment: BOOTCR_off_addr unused
CIPR_off_addr 00000008

Symbol: CIPR_off_addr
   Definitions
      At line 124 in file ..\str71x\71x_init.s
   Uses
      None
Comment: CIPR_off_addr unused
CKDIS1_config_all 000027FB

Symbol: CKDIS1_config_all
   Definitions
      At line 160 in file ..\str71x\71x_init.s
   Uses
      At line 258 in file ..\str71x\71x_init.s
Comment: CKDIS1_config_all used once
CKDIS2_config_all 00001FDD

Symbol: CKDIS2_config_all
   Definitions
      At line 161 in file ..\str71x\71x_init.s
   Uses
      At line 260 in file ..\str71x\71x_init.s
Comment: CKDIS2_config_all used once
CKDIS_off_addr 00000010

Symbol: CKDIS_off_addr
   Definitions
      At line 159 in file ..\str71x\71x_init.s
   Uses
      At line 259 in file ..\str71x\71x_init.s
      At line 261 in file ..\str71x\71x_init.s

CPM_Base_addr A0000040

Symbol: CPM_Base_addr
   Definitions
      At line 146 in file ..\str71x\71x_init.s
   Uses
      None
Comment: CPM_Base_addr unused
EIC_Base_addr FFFFF800

Symbol: EIC_Base_addr



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 122 in file ..\str71x\71x_init.s
   Uses
      At line 225 in file ..\str71x\71x_init.s
Comment: EIC_Base_addr used once
EMI_Base_addr 6C000000

Symbol: EMI_Base_addr
   Definitions
      At line 131 in file ..\str71x\71x_init.s
   Uses
      None
Comment: EMI_Base_addr unused
EMI_ENABLE 00008000

Symbol: EMI_ENABLE
   Definitions
      At line 137 in file ..\str71x\71x_init.s
   Uses
      None
Comment: EMI_ENABLE unused
EMI_SIZE_16 00000001

Symbol: EMI_SIZE_16
   Definitions
      At line 138 in file ..\str71x\71x_init.s
   Uses
      None
Comment: EMI_SIZE_16 unused
EXTMEM_mask 00000003

Symbol: EXTMEM_mask
   Definitions
      At line 150 in file ..\str71x\71x_init.s
   Uses
      None
Comment: EXTMEM_mask unused
FIQ_Stack 2000EB00

Symbol: FIQ_Stack
   Definitions
      At line 99 in file ..\str71x\71x_init.s
   Uses
      At line 100 in file ..\str71x\71x_init.s
      At line 182 in file ..\str71x\71x_init.s

FIQ_Stack_Length 00000100

Symbol: FIQ_Stack_Length
   Definitions
      At line 90 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
      At line 100 in file ..\str71x\71x_init.s

FIR_off_addr 0000001C

Symbol: FIR_off_addr
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 126 in file ..\str71x\71x_init.s
   Uses
      None
Comment: FIR_off_addr unused
FLASH_mask 00000000

Symbol: FLASH_mask
   Definitions
      At line 148 in file ..\str71x\71x_init.s
   Uses
      None
Comment: FLASH_mask unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 69 in file ..\str71x\71x_init.s
   Uses
      At line 181 in file ..\str71x\71x_init.s
      At line 184 in file ..\str71x\71x_init.s
      At line 187 in file ..\str71x\71x_init.s
      At line 190 in file ..\str71x\71x_init.s
      At line 193 in file ..\str71x\71x_init.s

GPIO2_Base_addr E0005000

Symbol: GPIO2_Base_addr
   Definitions
      At line 140 in file ..\str71x\71x_init.s
   Uses
      None
Comment: GPIO2_Base_addr unused
Heap_Size 00000400

Symbol: Heap_Size
   Definitions
      At line 115 in file ..\str71x\71x_init.s
   Uses
      At line 119 in file ..\str71x\71x_init.s
      At line 305 in file ..\str71x\71x_init.s

ICR_off_addr 00000000

Symbol: ICR_off_addr
   Definitions
      At line 123 in file ..\str71x\71x_init.s
   Uses
      None
Comment: ICR_off_addr unused
IER_off_addr 00000020

Symbol: IER_off_addr
   Definitions
      At line 127 in file ..\str71x\71x_init.s
   Uses
      None
Comment: IER_off_addr unused
IPR_off_addr 00000040




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: IPR_off_addr
   Definitions
      At line 128 in file ..\str71x\71x_init.s
   Uses
      None
Comment: IPR_off_addr unused
IRQ_Stack 2000F000

Symbol: IRQ_Stack
   Definitions
      At line 97 in file ..\str71x\71x_init.s
   Uses
      At line 98 in file ..\str71x\71x_init.s
      At line 185 in file ..\str71x\71x_init.s

IRQ_Stack_Length 00000400

Symbol: IRQ_Stack_Length
   Definitions
      At line 88 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
      At line 98 in file ..\str71x\71x_init.s

ISR_Stack_Size 00001800

Symbol: ISR_Stack_Size
   Definitions
      At line 95 in file ..\str71x\71x_init.s
   Uses
      At line 106 in file ..\str71x\71x_init.s
Comment: ISR_Stack_Size used once
IVR_off_addr 00000018

Symbol: IVR_off_addr
   Definitions
      At line 125 in file ..\str71x\71x_init.s
   Uses
      At line 228 in file ..\str71x\71x_init.s
Comment: IVR_off_addr used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 68 in file ..\str71x\71x_init.s
   Uses
      At line 181 in file ..\str71x\71x_init.s
      At line 184 in file ..\str71x\71x_init.s
      At line 187 in file ..\str71x\71x_init.s
      At line 190 in file ..\str71x\71x_init.s
      At line 193 in file ..\str71x\71x_init.s

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 64 in file ..\str71x\71x_init.s
   Uses
      At line 187 in file ..\str71x\71x_init.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 61 in file ..\str71x\71x_init.s
   Uses
      At line 181 in file ..\str71x\71x_init.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 62 in file ..\str71x\71x_init.s
   Uses
      At line 184 in file ..\str71x\71x_init.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 63 in file ..\str71x\71x_init.s
   Uses
      At line 193 in file ..\str71x\71x_init.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 66 in file ..\str71x\71x_init.s
   Uses
      At line 292 in file ..\str71x\71x_init.s
Comment: Mode_SYS used once
Mode_UNDEF 0000001B

Symbol: Mode_UNDEF
   Definitions
      At line 65 in file ..\str71x\71x_init.s
   Uses
      At line 190 in file ..\str71x\71x_init.s
Comment: Mode_UNDEF used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 60 in file ..\str71x\71x_init.s
   Uses
      None
Comment: Mode_USR unused
PC0_off_addr 00000000

Symbol: PC0_off_addr
   Definitions
      At line 141 in file ..\str71x\71x_init.s
   Uses
      None
Comment: PC0_off_addr unused
PC1_off_addr 00000004




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: PC1_off_addr
   Definitions
      At line 142 in file ..\str71x\71x_init.s
   Uses
      None
Comment: PC1_off_addr unused
PC2_off_addr 00000008

Symbol: PC2_off_addr
   Definitions
      At line 143 in file ..\str71x\71x_init.s
   Uses
      None
Comment: PC2_off_addr unused
PD_off_addr 0000000C

Symbol: PD_off_addr
   Definitions
      At line 144 in file ..\str71x\71x_init.s
   Uses
      None
Comment: PD_off_addr unused
RAM_Base 20000000

Symbol: RAM_Base
   Definitions
      At line 74 in file ..\str71x\71x_init.s
   Uses
      None
Comment: RAM_Base unused
RAM_Limit 20010000

Symbol: RAM_Limit
   Definitions
      At line 75 in file ..\str71x\71x_init.s
   Uses
      At line 77 in file ..\str71x\71x_init.s
      At line 305 in file ..\str71x\71x_init.s

RAM_mask 00000002

Symbol: RAM_mask
   Definitions
      At line 149 in file ..\str71x\71x_init.s
   Uses
      None
Comment: RAM_mask unused
RCCU_PER_Base_addr A0000000

Symbol: RCCU_PER_Base_addr
   Definitions
      At line 153 in file ..\str71x\71x_init.s
   Uses
      At line 262 in file ..\str71x\71x_init.s
Comment: RCCU_PER_Base_addr used once
RCCU_PER_Init 00000014

Symbol: RCCU_PER_Init
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 152 in file ..\str71x\71x_init.s
   Uses
      At line 263 in file ..\str71x\71x_init.s
Comment: RCCU_PER_Init used once
RCCU_PER_off_addr 0000001C

Symbol: RCCU_PER_off_addr
   Definitions
      At line 154 in file ..\str71x\71x_init.s
   Uses
      At line 264 in file ..\str71x\71x_init.s
Comment: RCCU_PER_off_addr used once
SIR0_off_addr 00000060

Symbol: SIR0_off_addr
   Definitions
      At line 129 in file ..\str71x\71x_init.s
   Uses
      At line 235 in file ..\str71x\71x_init.s
Comment: SIR0_off_addr used once
SRAM_Base 60000000

Symbol: SRAM_Base
   Definitions
      At line 76 in file ..\str71x\71x_init.s
   Uses
      None
Comment: SRAM_Base unused
SVC_Stack 2000EC00

Symbol: SVC_Stack
   Definitions
      At line 98 in file ..\str71x\71x_init.s
   Uses
      At line 99 in file ..\str71x\71x_init.s
      At line 194 in file ..\str71x\71x_init.s

SVC_Stack_Length 00000100

Symbol: SVC_Stack_Length
   Definitions
      At line 89 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
      At line 99 in file ..\str71x\71x_init.s

Stack_Base 20010000

Symbol: Stack_Base
   Definitions
      At line 77 in file ..\str71x\71x_init.s
   Uses
      At line 96 in file ..\str71x\71x_init.s
Comment: Stack_Base used once
UNDEF_Stack 2000E900

Symbol: UNDEF_Stack
   Definitions
      At line 101 in file ..\str71x\71x_init.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 191 in file ..\str71x\71x_init.s
Comment: UNDEF_Stack used once
UNDEF_Stack_Length 00000100

Symbol: UNDEF_Stack_Length
   Definitions
      At line 92 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
Comment: UNDEF_Stack_Length used once
USR_Stack 20010000

Symbol: USR_Stack
   Definitions
      At line 96 in file ..\str71x\71x_init.s
   Uses
      At line 97 in file ..\str71x\71x_init.s
      At line 293 in file ..\str71x\71x_init.s

USR_Stack_Length 00001000

Symbol: USR_Stack_Length
   Definitions
      At line 87 in file ..\str71x\71x_init.s
   Uses
      At line 95 in file ..\str71x\71x_init.s
      At line 97 in file ..\str71x\71x_init.s
      At line 105 in file ..\str71x\71x_init.s

60 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

T0TIMI_Addr 00000000

Symbol: T0TIMI_Addr
   Definitions
      At line 23 in file ..\str71x\71x_init.s
   Uses
      At line 231 in file ..\str71x\71x_init.s
Comment: T0TIMI_Addr used once
__main 00000000

Symbol: __main
   Definitions
      At line 297 in file ..\str71x\71x_init.s
   Uses
      At line 298 in file ..\str71x\71x_init.s
Comment: __main used once
2 symbols
413 symbols in table
