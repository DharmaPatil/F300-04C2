


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2007 STMicroelectron
                       ics ********************
    2 00000000         ;* File Name          : 71x_vect.s
    3 00000000         ;* Author             : MCD Application Team
    4 00000000         ;* Version            : V4.0
    5 00000000         ;* Date               : 10/09/2007
    6 00000000         ;* Description        : This file used to initialize the
                        exception and IRQ
    7 00000000         ;*                      vectors, and to enter/return to/
                       from exceptions handlers.
    8 00000000         ;*******************************************************
                       ************************
    9 00000000         ; THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS A
                       T PROVIDING CUSTOMERS WITH
   10 00000000         ; CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER F
                       OR THEM TO SAVE TIME.
   11 00000000         ; AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIAB
                       LE FOR ANY DIRECT, INDIRECT
   12 00000000         ; OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS AR
                       ISING FROM THE CONTENT
   13 00000000         ; OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF T
                       HE CODING INFORMATION
   14 00000000         ; CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
   15 00000000         ;*******************************************************
                       ************************/
   16 00000000         
   17 00000000                 PRESERVE8
   18 00000000                 AREA             RESET, CODE, READONLY
   19 00000000         
   20 00000000 FFFFF800 
                       EIC_base_addr
                               EQU              0xFFFFF800  ; EIC base address.
                                                            
   21 00000000 00000004 
                       CICR_off_addr
                               EQU              0x04        ; Current Interrupt
                                                             Channel Register.
   22 00000000 00000018 
                       IVR_off_addr
                               EQU              0x18        ; Interrupt Vector 
                                                            Register.
   23 00000000 00000040 
                       IPR_off_addr
                               EQU              0x40        ; Interrupt Pending
                                                             Register.
   24 00000000         
   25 00000000         
   26 00000000         ;*******************************************************
                       ************************
   27 00000000         ;              Import  the Reset_Handler address from 71
                       x_init.s
   28 00000000         ;*******************************************************
                       ************************
   29 00000000         
   30 00000000                 IMPORT           Reset_Handler
   31 00000000         
   32 00000000         ;*******************************************************
                       ************************
   33 00000000         ;                      Import exception handlers



ARM Macro Assembler    Page 2 


   34 00000000         ;*******************************************************
                       ************************
   35 00000000         
   36 00000000                 IMPORT           Undefined_Handler
   37 00000000                 IMPORT           SWI_Handler
   38 00000000                 IMPORT           Prefetch_Handler
   39 00000000                 IMPORT           Abort_Handler
   40 00000000                 IMPORT           FIQ_Handler
   41 00000000         
   42 00000000         ;*******************************************************
                       ************************
   43 00000000         ;                   Import IRQ handlers from 71x_it.c
   44 00000000         ;*******************************************************
                       ************************
   45 00000000         
   46 00000000                 IMPORT           T0TIMI_IRQHandler
   47 00000000                 IMPORT           FLASH_IRQHandler
   48 00000000                 IMPORT           RCCU_IRQHandler
   49 00000000                 IMPORT           RTC_IRQHandler
   50 00000000                 IMPORT           WDG_IRQHandler
   51 00000000                 IMPORT           XTI_IRQHandler
   52 00000000                 IMPORT           USBHP_IRQHandler
   53 00000000                 IMPORT           I2C0ITERR_IRQHandler
   54 00000000                 IMPORT           I2C1ITERR_IRQHandler
   55 00000000                 IMPORT           UART0_IRQHandler
   56 00000000                 IMPORT           UART1_IRQHandler
   57 00000000                 IMPORT           UART2_IRQHandler
   58 00000000                 IMPORT           UART3_IRQHandler
   59 00000000                 IMPORT           BSPI0_IRQHandler
   60 00000000                 IMPORT           BSPI1_IRQHandler
   61 00000000                 IMPORT           I2C0_IRQHandler
   62 00000000                 IMPORT           I2C1_IRQHandler
   63 00000000                 IMPORT           CAN_IRQHandler
   64 00000000                 IMPORT           ADC12_IRQHandler
   65 00000000                 IMPORT           T1TIMI_IRQHandler
   66 00000000                 IMPORT           T2TIMI_IRQHandler
   67 00000000                 IMPORT           T3TIMI_IRQHandler
   68 00000000                 IMPORT           HDLC_IRQHandler
   69 00000000                 IMPORT           USBLP_IRQHandler
   70 00000000                 IMPORT           T0TOI_IRQHandler
   71 00000000                 IMPORT           T0OC1_IRQHandler
   72 00000000                 IMPORT           T0OC2_IRQHandler
   73 00000000         
   74 00000000         ;*******************************************************
                       ************************
   75 00000000         ;            Export Peripherals IRQ handlers table addre
                       ss
   76 00000000         ;*******************************************************
                       ************************
   77 00000000         
   78 00000000                 EXPORT           T0TIMI_Addr
   79 00000000                 EXPORT           IRQHandler
   80 00000000         
   81 00000000         ;*******************************************************
                       ************************
   82 00000000         ;
   83 00000000         ;*******************************************************
                       ************************
   84 00000000                 EXPORT           Vectors



ARM Macro Assembler    Page 3 


   85 00000000         ;*******************************************************
                       ************************
   86 00000000         ;                        Exception vectors
   87 00000000         ;*******************************************************
                       ************************
   88 00000000         
   89 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
   90 00000004 E59FF018        LDR              PC, Undefined_Addr
   91 00000008 E59FF018        LDR              PC, SWI_Addr
   92 0000000C E59FF018        LDR              PC, Prefetch_Addr
   93 00000010 E59FF018        LDR              PC, Abort_Addr
   94 00000014 E1A00000        NOP                          ; Reserved vector
   95 00000018 E59FF018        LDR              PC, IRQ_Addr
   96 0000001C E59FF018        LDR              PC, FIQ_Addr
   97 00000020         
   98 00000020         ;*******************************************************
                       ************************
   99 00000020         ;               Exception handlers address table
  100 00000020         ;*******************************************************
                       ************************
  101 00000020         
  102 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  103 00000024 00000000 
                       Undefined_Addr
                               DCD              UndefinedHandler
  104 00000028 00000000 
                       SWI_Addr
                               DCD              SWIHandler
  105 0000002C 00000000 
                       Prefetch_Addr
                               DCD              PrefetchAbortHandler
  106 00000030 00000000 
                       Abort_Addr
                               DCD              DataAbortHandler
  107 00000034 00000000        DCD              0           ; Reserved vector
  108 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQHandler
  109 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQHandler
  110 00000040         
  111 00000040         ;*******************************************************
                       ************************
  112 00000040         ;              Peripherals IRQ handlers address table
  113 00000040         ;*******************************************************
                       ************************
  114 00000040         
  115 00000040 00000000 
                       T0TIMI_Addr
                               DCD              T0TIMIIRQHandler
  116 00000044 00000000 
                       FLASH_Addr
                               DCD              FLASHIRQHandler
  117 00000048 00000000 
                       RCCU_Addr



ARM Macro Assembler    Page 4 


                               DCD              RCCUIRQHandler
  118 0000004C 00000000 
                       RTC_Addr
                               DCD              RTCIRQHandler
  119 00000050 00000000 
                       WDG_Addr
                               DCD              WDGIRQHandler
  120 00000054 00000000 
                       XTI_Addr
                               DCD              XTIIRQHandler
  121 00000058 00000000 
                       USBHP_Addr
                               DCD              USBHPIRQHandler
  122 0000005C 00000000 
                       I2C0ITERR_Addr
                               DCD              I2C0ITERRIRQHandler
  123 00000060 00000000 
                       I2C1ITERR_ADDR
                               DCD              I2C1ITERRIRQHandler
  124 00000064 00000000 
                       UART0_Addr
                               DCD              UART0IRQHandler
  125 00000068 00000000 
                       UART1_Addr
                               DCD              UART1IRQHandler
  126 0000006C 00000000 
                       UART2_ADDR
                               DCD              UART2IRQHandler
  127 00000070 00000000 
                       UART3_ADDR
                               DCD              UART3IRQHandler
  128 00000074 00000000 
                       BSPI0_ADDR
                               DCD              BSPI0IRQHandler
  129 00000078 00000000 
                       BSPI1_Addr
                               DCD              BSPI1IRQHandler
  130 0000007C 00000000 
                       I2C0_Addr
                               DCD              I2C0IRQHandler
  131 00000080 00000000 
                       I2C1_Addr
                               DCD              I2C1IRQHandler
  132 00000084 00000000 
                       CAN_Addr
                               DCD              CANIRQHandler
  133 00000088 00000000 
                       ADC12_Addr
                               DCD              ADC12IRQHandler
  134 0000008C 00000000 
                       T1TIMI_Addr
                               DCD              T1TIMIIRQHandler
  135 00000090 00000000 
                       T2TIMI_Addr
                               DCD              T2TIMIIRQHandler
  136 00000094 00000000 
                       T3TIMI_Addr
                               DCD              T3TIMIIRQHandler
  137 00000098 00000000        DCD              0           ; reserved



ARM Macro Assembler    Page 5 


  138 0000009C 00000000        DCD              0           ; reserved
  139 000000A0 00000000        DCD              0           ; reserved
  140 000000A4 00000000 
                       HDLC_Addr
                               DCD              HDLCIRQHandler
  141 000000A8 00000000 
                       USBLP_Addr
                               DCD              USBLPIRQHandler
  142 000000AC 00000000        DCD              0           ; reserved
  143 000000B0 00000000        DCD              0           ; reserved
  144 000000B4 00000000 
                       T0TOI_Addr
                               DCD              T0TOIIRQHandler
  145 000000B8 00000000 
                       T0OC1_Addr
                               DCD              T0OC1IRQHandler
  146 000000BC 00000000 
                       T0OC2_Addr
                               DCD              T0OC2IRQHandler
  147 000000C0         
  148 000000C0         ;*******************************************************
                       ************************
  149 000000C0         ;                         Exception Handlers
  150 000000C0         ;*******************************************************
                       ************************
  151 000000C0         
  152 000000C0         ;*******************************************************
                       ************************
  153 000000C0         ;* Macro Name     : SaveContext
  154 000000C0         ;* Description    : This macro used to save the context 
                       before entering
  155 000000C0         ;                   an exception handler.
  156 000000C0         ;* Input          : The range of registers to store.
  157 000000C0         ;* Output         : none
  158 000000C0         ;*******************************************************
                       ************************
  159 000000C0         
  160 000000C0                 MACRO
  161 000000C0                 SaveContext      $reg1,$reg2
  162 000000C0                 STMFD            sp!,{$reg1-$reg2,lr} ; Save The
                                                             workspace plus the
                                                             current return
  163 000000C0         ; address lr_ mode into the stack.
  164 000000C0                 MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 000000C0                 STMFD            sp!,{r1}    ; Save spsr.
  166 000000C0                 MEND
  167 000000C0         
  168 000000C0         ;*******************************************************
                       ************************
  169 000000C0         ;* Macro Name     : RestoreContext
  170 000000C0         ;* Description    : This macro used to restore the conte
                       xt to return from
  171 000000C0         ;                   an exception handler and continue th
                       e program execution.
  172 000000C0         ;* Input          : The range of registers to restore.
  173 000000C0         ;* Output         : none
  174 000000C0         ;*******************************************************
                       ************************



ARM Macro Assembler    Page 6 


  175 000000C0         
  176 000000C0                 MACRO
  177 000000C0                 RestoreContext   $reg1,$reg2
  178 000000C0                 LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 000000C0                 MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 000000C0                 LDMFD            sp!,{$reg1-$reg2,pc}^ ; Return 
                                                            to the instruction 
                                                            following...
  181 000000C0         ; ...the exception interrupt.
  182 000000C0                 MEND
  183 000000C0         
  184 000000C0         ;*******************************************************
                       ************************
  185 000000C0         ;* Function Name  : UndefinedHandler
  186 000000C0         ;* Description    : This function called when undefined 
                       instruction
  187 000000C0         ;                   exception is entered.
  188 000000C0         ;* Input          : none
  189 000000C0         ;* Output         : none
  190 000000C0         ;*******************************************************
                       ************************
  191 000000C0         
  192 000000C0         UndefinedHandler
  193 000000C0                 SaveContext      r0,r12      ; Save the workspac
                                                            e plus the current
  162 000000C0 E92D5FFF        STMFD            sp!,{r0-r12,lr} ; Save The work
                                                            space plus the curr
                                                            ent return
  163 000000C4         ; address lr_ mode into the stack.
  164 000000C4 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 000000C8 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  194 000000CC         ; return address lr_ und and spsr_und.
  195 000000CC EBFFFFFE        BL               Undefined_Handler ; Branch to U
                                                            ndefined_Handler.
  196 000000D0                 RestoreContext   r0,r12      ; Return to the ins
                                                            truction following.
                                                            ..
  178 000000D0 E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 000000D4 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 000000D8 E8FD9FFF        LDMFD            sp!,{r0-r12,pc}^ ; Return to th
                                                            e instruction follo
                                                            wing...
  181 000000DC         ; ...the exception interrupt.
  197 000000DC         ; ...the undefined instruction.
  198 000000DC         
  199 000000DC         ;*******************************************************
                       ************************
  200 000000DC         ;* Function Name  : SWIHandler
  201 000000DC         ;* Description    : This function called when SWI instru
                       ction executed.
  202 000000DC         ;* Input          : none
  203 000000DC         ;* Output         : none



ARM Macro Assembler    Page 7 


  204 000000DC         ;*******************************************************
                       ************************
  205 000000DC         
  206 000000DC         SWIHandler
  207 000000DC                 SaveContext      r0,r12      ; Save the workspac
                                                            e plus the current
  162 000000DC E92D5FFF        STMFD            sp!,{r0-r12,lr} ; Save The work
                                                            space plus the curr
                                                            ent return
  163 000000E0         ; address lr_ mode into the stack.
  164 000000E0 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 000000E4 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  208 000000E8         ; return address lr_ svc and spsr_svc.
  209 000000E8 EBFFFFFE        BL               SWI_Handler ; Branch to SWI_Han
                                                            dler.
  210 000000EC                 RestoreContext   r0,r12      ; Return to the ins
                                                            truction following.
                                                            ..
  178 000000EC E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 000000F0 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 000000F4 E8FD9FFF        LDMFD            sp!,{r0-r12,pc}^ ; Return to th
                                                            e instruction follo
                                                            wing...
  181 000000F8         ; ...the exception interrupt.
  211 000000F8         ; ...the SWI instruction.
  212 000000F8         
  213 000000F8         ;*******************************************************
                       ************************
  214 000000F8         ;* Function Name  : IRQHandler
  215 000000F8         ;* Description    : This function called when IRQ except
                       ion is entered.
  216 000000F8         ;* Input          : none
  217 000000F8         ;* Output         : none
  218 000000F8         ;*******************************************************
                       ************************
  219 000000F8         
  220 000000F8         IRQHandler
  221 000000F8 E24EE004        SUB              lr,lr,#4    ; Update the link r
                                                            egister
  222 000000FC                 SaveContext      r0,r12      ; Save the workspac
                                                            e plus the current
  162 000000FC E92D5FFF        STMFD            sp!,{r0-r12,lr} ; Save The work
                                                            space plus the curr
                                                            ent return
  163 00000100         ; address lr_ mode into the stack.
  164 00000100 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 00000104 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  223 00000108         ; return address lr_ irq and spsr_irq.
  224 00000108 E59FE310        LDR              lr, =ReturnAddress ; Read the r
                                                            eturn address.
  225 0000010C E59F0310        LDR              r0, =EIC_base_addr
  226 00000110 E3A01018        LDR              r1, =IVR_off_addr
  227 00000114 E080F001        ADD              pc,r0,r1    ; Branch to the IRQ
                                                             handler.



ARM Macro Assembler    Page 8 


  228 00000118         ReturnAddress
  229 00000118         ; Clear pending bit in EIC (using the proper IPRx)
  230 00000118 E59F0304        LDR              r0, =EIC_base_addr
  231 0000011C E5902004        LDR              r2, [r0, #CICR_off_addr] ; Get 
                                                            the IRQ channel num
                                                            ber.
  232 00000120 E3A03001        MOV              r3,#1
  233 00000124 E1A03213        MOV              r3,r3,LSL r2
  234 00000128 E5803040        STR              r3,[r0, #IPR_off_addr] ; Clear 
                                                            the corresponding I
                                                            PR bit.
  235 0000012C                 RestoreContext   r0,r12      ; Restore the conte
                                                            xt and return to th
                                                            e...
  178 0000012C E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 00000130 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 00000134 E8FD9FFF        LDMFD            sp!,{r0-r12,pc}^ ; Return to th
                                                            e instruction follo
                                                            wing...
  181 00000138         ; ...the exception interrupt.
  236 00000138         ; ...program execution.
  237 00000138         
  238 00000138         ;*******************************************************
                       ************************
  239 00000138         ;* Function Name  : PrefetchAbortHandler
  240 00000138         ;* Description    : This function called when Prefetch A
                       bort
  241 00000138         ;                   exception is entered.
  242 00000138         ;* Input          : none
  243 00000138         ;* Output         : none
  244 00000138         ;*******************************************************
                       ************************
  245 00000138         
  246 00000138         PrefetchAbortHandler
  247 00000138 E24EE004        SUB              lr,lr,#4    ; Update the link r
                                                            egister.
  248 0000013C                 SaveContext      r0,r12      ; Save the workspac
                                                            e plus the current
  162 0000013C E92D5FFF        STMFD            sp!,{r0-r12,lr} ; Save The work
                                                            space plus the curr
                                                            ent return
  163 00000140         ; address lr_ mode into the stack.
  164 00000140 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 00000144 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  249 00000148         ; return address lr_abt and spsr_abt.
  250 00000148 EBFFFFFE        BL               Prefetch_Handler ; Branch to Pr
                                                            efetch_Handler.
  251 0000014C                 RestoreContext   r0,r12      ; Return to the ins
                                                            truction following 
                                                            that...
  178 0000014C E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 00000150 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.



ARM Macro Assembler    Page 9 


  180 00000154 E8FD9FFF        LDMFD            sp!,{r0-r12,pc}^ ; Return to th
                                                            e instruction follo
                                                            wing...
  181 00000158         ; ...the exception interrupt.
  252 00000158         ; ...has generated the prefetch abort exception.
  253 00000158         
  254 00000158         ;*******************************************************
                       ************************
  255 00000158         ;* Function Name  : DataAbortHandler
  256 00000158         ;* Description    : This function is called when Data Ab
                       ort
  257 00000158         ;                   exception is entered.
  258 00000158         ;* Input          : none
  259 00000158         ;* Output         : none
  260 00000158         ;*******************************************************
                       ************************
  261 00000158         
  262 00000158         DataAbortHandler
  263 00000158 E24EE008        SUB              lr,lr,#8    ; Update the link r
                                                            egister.
  264 0000015C                 SaveContext      r0,r12      ; Save the workspac
                                                            e plus the current
  162 0000015C E92D5FFF        STMFD            sp!,{r0-r12,lr} ; Save The work
                                                            space plus the curr
                                                            ent return
  163 00000160         ; address lr_ mode into the stack.
  164 00000160 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 00000164 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  265 00000168         ; return address lr_ abt and spsr_abt.
  266 00000168 EBFFFFFE        BL               Abort_Handler ; Branch to Abort
                                                            _Handler.
  267 0000016C                 RestoreContext   r0,r12      ; Return to the ins
                                                            truction following 
                                                            that...
  178 0000016C E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 00000170 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 00000174 E8FD9FFF        LDMFD            sp!,{r0-r12,pc}^ ; Return to th
                                                            e instruction follo
                                                            wing...
  181 00000178         ; ...the exception interrupt.
  268 00000178         ; ...has generated the data abort exception.
  269 00000178         
  270 00000178         ;*******************************************************
                       ************************
  271 00000178         ;* Function Name  : FIQHandler
  272 00000178         ;* Description    : This function is called when FIQ
  273 00000178         ;                   exception is entered.
  274 00000178         ;* Input          : none
  275 00000178         ;* Output         : none
  276 00000178         ;*******************************************************
                       ************************
  277 00000178         
  278 00000178         FIQHandler
  279 00000178 E24EE004        SUB              lr,lr,#4    ; Update the link r
                                                            egister.



ARM Macro Assembler    Page 10 


  280 0000017C                 SaveContext      r0,r7       ; Save the workspac
                                                            e plus the current
  162 0000017C E92D40FF        STMFD            sp!,{r0-r7,lr} ; Save The works
                                                            pace plus the curre
                                                            nt return
  163 00000180         ; address lr_ mode into the stack.
  164 00000180 E14F1000        MRS              r1,spsr     ; Save the spsr_mod
                                                            e into r1.
  165 00000184 E92D0002        STMFD            sp!,{r1}    ; Save spsr.
  281 00000188         ; return address lr_ fiq and spsr_fiq.
  282 00000188 EBFFFFFE        BL               FIQ_Handler ; Branch to FIQ_Han
                                                            dler.
  283 0000018C                 RestoreContext   r0,r7       ; Restore the conte
                                                            xt and return to th
                                                            e...
  178 0000018C E8BD0002        LDMFD            sp!,{r1}    ; Restore the saved
                                                             spsr_mode into r1.
                                                            
  179 00000190 E16FF001        MSR              spsr_cxsf,r1 ; Restore spsr_mod
                                                            e.
  180 00000194 E8FD80FF        LDMFD            sp!,{r0-r7,pc}^ ; Return to the
                                                             instruction follow
                                                            ing...
  181 00000198         ; ...the exception interrupt.
  284 00000198         ; ...program execution.
  285 00000198         
  286 00000198         ;*******************************************************
                       ************************
  287 00000198         ;* Macro Name     : IRQ_to_SYS
  288 00000198         ;* Description    : This macro used to switch form IRQ m
                       ode to SYS mode
  289 00000198         ;* Input          : none.
  290 00000198         ;* Output         : none
  291 00000198         ;*******************************************************
                       ************************
  292 00000198                 MACRO
  293 00000198                 IRQ_to_SYS
  294 00000198                 MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000198                 STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  296 00000198                 MEND
  297 00000198         ;*******************************************************
                       ************************
  298 00000198         ;* Macro Name     : SYS_to_IRQ
  299 00000198         ;* Description    : This macro used to switch from SYS m
                       ode to IRQ mode
  300 00000198         ;                   then to return to IRQHnadler routine
                       .
  301 00000198         ;* Input          : none.
  302 00000198         ;* Output         : none.
  303 00000198         ;*******************************************************
                       ************************
  304 00000198                 MACRO
  305 00000198                 SYS_to_IRQ
  306 00000198                 LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000198                 MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.



ARM Macro Assembler    Page 11 


  308 00000198                 MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000198         ; pending bit.
  310 00000198                 MEND
  311 00000198         ;*******************************************************
                       ************************
  312 00000198         ;* Function Name  : T0TIMIIRQHandler
  313 00000198         ;* Description    : This function used to switch to SYS 
                       mode before entering
  314 00000198         ;                   the T0TIMI_IRQHandler function locat
                       ed in 71x_it.c.
  315 00000198         ;                   Then to return to IRQ mode after the
                       
  316 00000198         ;                   T0TIMI_IRQHandler function terminati
                       on.
  317 00000198         ;* Input          : none.
  318 00000198         ;* Output         : none.
  319 00000198         ;*******************************************************
                       ************************
  320 00000198         T0TIMIIRQHandler
  321 00000198                 IRQ_to_SYS
  294 00000198 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000019C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  322 000001A0 EBFFFFFE        BL               T0TIMI_IRQHandler
  323 000001A4                 SYS_to_IRQ
  306 000001A4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000001A8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000001AC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000001B0         ; pending bit.
  324 000001B0         ;*******************************************************
                       ************************
  325 000001B0         ;* Function Name  : FLASHIRQHandler
  326 000001B0         ;* Description    : This function used to switch to SYS 
                       mode before entering
  327 000001B0         ;                   the FLASH_IRQHandler function locate
                       d in 71x_it.c.
  328 000001B0         ;                   Then to return to IRQ mode after the
                       
  329 000001B0         ;                   FLASH_IRQHandler function terminatio
                       n.
  330 000001B0         ;* Input          : none
  331 000001B0         ;* Output         : none
  332 000001B0         ;*******************************************************
                       ************************
  333 000001B0         FLASHIRQHandler
  334 000001B0                 IRQ_to_SYS
  294 000001B0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000001B4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  335 000001B8 EBFFFFFE        BL               FLASH_IRQHandler
  336 000001BC                 SYS_to_IRQ



ARM Macro Assembler    Page 12 


  306 000001BC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000001C0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000001C4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000001C8         ; pending bit.
  337 000001C8         ;*******************************************************
                       ************************
  338 000001C8         ;* Function Name  : RCCUIRQHandler
  339 000001C8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  340 000001C8         ;                   the RCCU_IRQHandler function located
                        in 71x_it.c.
  341 000001C8         ;                   Then to return to IRQ mode after the
                       
  342 000001C8         ;                   RCCU_IRQHandler function termination
                       .
  343 000001C8         ;* Input          : none
  344 000001C8         ;* Output         : none
  345 000001C8         ;*******************************************************
                       ************************
  346 000001C8         RCCUIRQHandler
  347 000001C8                 IRQ_to_SYS
  294 000001C8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000001CC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  348 000001D0 EBFFFFFE        BL               RCCU_IRQHandler
  349 000001D4                 SYS_to_IRQ
  306 000001D4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000001D8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000001DC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000001E0         ; pending bit.
  350 000001E0         ;*******************************************************
                       ************************
  351 000001E0         ;* Function Name  : RTCIRQHandler
  352 000001E0         ;* Description    : This function used to switch to SYS 
                       mode before entering
  353 000001E0         ;                   the RTC_IRQHandler function located 
                       in 71x_it.c.
  354 000001E0         ;                   Then to return to IRQ mode after the
                       
  355 000001E0         ;                   RTC_IRQHandler function termination.
                       
  356 000001E0         ;* Input          : none
  357 000001E0         ;* Output         : none
  358 000001E0         ;*******************************************************
                       ************************
  359 000001E0         RTCIRQHandler
  360 000001E0                 IRQ_to_SYS
  294 000001E0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000001E4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg



ARM Macro Assembler    Page 13 


                                                            ister.
  361 000001E8 EBFFFFFE        BL               RTC_IRQHandler
  362 000001EC                 SYS_to_IRQ
  306 000001EC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000001F0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000001F4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000001F8         ; pending bit.
  363 000001F8         ;*******************************************************
                       ************************
  364 000001F8         ;* Function Name  : WDGIRQHandler
  365 000001F8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  366 000001F8         ;                   the WDG_IRQHandler function located 
                       in 71x_it.c.
  367 000001F8         ;                   Then to return to IRQ mode after the
                       
  368 000001F8         ;                   WDG_IRQHandler function termination.
                       
  369 000001F8         ;* Input          : none
  370 000001F8         ;* Output         : none
  371 000001F8         ;*******************************************************
                       ************************
  372 000001F8         WDGIRQHandler
  373 000001F8                 IRQ_to_SYS
  294 000001F8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000001FC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  374 00000200 EBFFFFFE        BL               WDG_IRQHandler
  375 00000204                 SYS_to_IRQ
  306 00000204 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000208 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000020C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000210         ; pending bit.
  376 00000210         ;*******************************************************
                       ************************
  377 00000210         ;* Function Name  : XTIIRQHandler
  378 00000210         ;* Description    : This function used to switch to SYS 
                       mode before entering
  379 00000210         ;                   the XTI_IRQHandler function located 
                       in 71x_it.c.
  380 00000210         ;                   Then to return to IRQ mode after the
                       
  381 00000210         ;                   XTI_IRQHandler function termination.
                       
  382 00000210         ;* Input          : none
  383 00000210         ;* Output         : none
  384 00000210         ;*******************************************************
                       ************************
  385 00000210         XTIIRQHandler
  386 00000210                 IRQ_to_SYS



ARM Macro Assembler    Page 14 


  294 00000210 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000214 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  387 00000218 EBFFFFFE        BL               XTI_IRQHandler
  388 0000021C                 SYS_to_IRQ
  306 0000021C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000220 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000224 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000228         ; pending bit.
  389 00000228         ;*******************************************************
                       ************************
  390 00000228         ;* Function Name  : USBHPIRQHandler
  391 00000228         ;* Description    : This function used to switch to SYS 
                       mode before entering
  392 00000228         ;                   the USBHP_IRQHandler function locate
                       d in 71x_it.c.
  393 00000228         ;                   Then to return to IRQ mode after the
                       
  394 00000228         ;                   USBHP_IRQHandler function terminatio
                       n.
  395 00000228         ;* Input          : none
  396 00000228         ;* Output         : none
  397 00000228         ;*******************************************************
                       ************************
  398 00000228         USBHPIRQHandler
  399 00000228                 IRQ_to_SYS
  294 00000228 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000022C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  400 00000230 EBFFFFFE        BL               USBHP_IRQHandler
  401 00000234                 SYS_to_IRQ
  306 00000234 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000238 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000023C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000240         ; pending bit.
  402 00000240         ;*******************************************************
                       ************************
  403 00000240         ;* Function Name  : I2C0ITERRIRQHandler
  404 00000240         ;* Description    : This function used to switch to SYS 
                       mode before entering
  405 00000240         ;                   the I2C0ITERR_IRQHandler function lo
                       cated in 71x_it.c.
  406 00000240         ;                   Then to return to IRQ mode after the
                       
  407 00000240         ;                   I2C0ITERR_IRQHandler function termin
                       ation.
  408 00000240         ;* Input          : none
  409 00000240         ;* Output         : none
  410 00000240         ;*******************************************************



ARM Macro Assembler    Page 15 


                       ************************
  411 00000240         I2C0ITERRIRQHandler
  412 00000240                 IRQ_to_SYS
  294 00000240 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000244 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  413 00000248 EBFFFFFE        BL               I2C0ITERR_IRQHandler
  414 0000024C                 SYS_to_IRQ
  306 0000024C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000250 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000254 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000258         ; pending bit.
  415 00000258         ;*******************************************************
                       ************************
  416 00000258         ;* Function Name  : I2C1ITERRIRQHandler
  417 00000258         ;* Description    : This function used to switch to SYS 
                       mode before entering
  418 00000258         ;                   the I2C1ITERR_IRQHandler function lo
                       cated in 71x_it.c.
  419 00000258         ;                   Then to return to IRQ mode after the
                       
  420 00000258         ;                   I2C1ITERR_IRQHandler function termin
                       ation.
  421 00000258         ;* Input          : none
  422 00000258         ;* Output         : none
  423 00000258         ;*******************************************************
                       ************************
  424 00000258         I2C1ITERRIRQHandler
  425 00000258                 IRQ_to_SYS
  294 00000258 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000025C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  426 00000260 EBFFFFFE        BL               I2C1ITERR_IRQHandler
  427 00000264                 SYS_to_IRQ
  306 00000264 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000268 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000026C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000270         ; pending bit.
  428 00000270         ;*******************************************************
                       ************************
  429 00000270         ;* Function Name  : UART0IRQHandler
  430 00000270         ;* Description    : This function used to switch to SYS 
                       mode before entering
  431 00000270         ;                   the UART0_IRQHandler function locate
                       d in 71x_it.c.
  432 00000270         ;                   Then to return to IRQ mode after the
                       
  433 00000270         ;                   UART0_IRQHandler function terminatio
                       n.



ARM Macro Assembler    Page 16 


  434 00000270         ;* Input          : none
  435 00000270         ;* Output         : none
  436 00000270         ;*******************************************************
                       ************************
  437 00000270         UART0IRQHandler
  438 00000270                 IRQ_to_SYS
  294 00000270 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000274 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  439 00000278 EBFFFFFE        BL               UART0_IRQHandler
  440 0000027C                 SYS_to_IRQ
  306 0000027C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000280 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000284 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000288         ; pending bit.
  441 00000288         ;*******************************************************
                       ************************
  442 00000288         ;* Function Name  : UART1IRQHandler
  443 00000288         ;* Description    : This function used to switch to SYS 
                       mode before entering
  444 00000288         ;                   the UART1_IRQHandler function locate
                       d in 71x_it.c.
  445 00000288         ;                   Then to return to IRQ mode after the
                       
  446 00000288         ;                   UART1_IRQHandler function terminatio
                       n.
  447 00000288         ;* Input          : none
  448 00000288         ;* Output         : none
  449 00000288         ;*******************************************************
                       ************************
  450 00000288         UART1IRQHandler
  451 00000288                 IRQ_to_SYS
  294 00000288 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000028C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  452 00000290 EBFFFFFE        BL               UART1_IRQHandler
  453 00000294                 SYS_to_IRQ
  306 00000294 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000298 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000029C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000002A0         ; pending bit.
  454 000002A0         ;*******************************************************
                       ************************
  455 000002A0         ;* Function Name  : UART2IRQHandler
  456 000002A0         ;* Description    : This function used to switch to SYS 
                       mode before entering
  457 000002A0         ;                   the UART2_IRQHandler function locate
                       d in 71x_it.c.
  458 000002A0         ;                   Then to return to IRQ mode after the



ARM Macro Assembler    Page 17 


                       
  459 000002A0         ;                   UART2_IRQHandler function terminatio
                       n.
  460 000002A0         ;* Input          : none
  461 000002A0         ;* Output         : none
  462 000002A0         ;*******************************************************
                       ************************
  463 000002A0         UART2IRQHandler
  464 000002A0                 IRQ_to_SYS
  294 000002A0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000002A4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  465 000002A8 EBFFFFFE        BL               UART2_IRQHandler
  466 000002AC                 SYS_to_IRQ
  306 000002AC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000002B0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000002B4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000002B8         ; pending bit.
  467 000002B8         ;*******************************************************
                       ************************
  468 000002B8         ;* Function Name  : UART3IRQHandler
  469 000002B8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  470 000002B8         ;                   the UART3_IRQHandler function locate
                       d in 71x_it.c.
  471 000002B8         ;                   Then to return to IRQ mode after the
                       
  472 000002B8         ;                   UART3_IRQHandler function terminatio
                       n.
  473 000002B8         ;* Input          : none
  474 000002B8         ;* Output         : none
  475 000002B8         ;*******************************************************
                       ************************
  476 000002B8         UART3IRQHandler
  477 000002B8                 IRQ_to_SYS
  294 000002B8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000002BC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  478 000002C0 EBFFFFFE        BL               UART3_IRQHandler
  479 000002C4                 SYS_to_IRQ
  306 000002C4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000002C8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000002CC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000002D0         ; pending bit.
  480 000002D0         ;*******************************************************
                       ************************
  481 000002D0         ;* Function Name  : BSPI0IRQHandler
  482 000002D0         ;* Description    : This function used to switch to SYS 
                       mode before entering



ARM Macro Assembler    Page 18 


  483 000002D0         ;                   the BSPI0_IRQHandler function locate
                       d in 71x_it.c.
  484 000002D0         ;                   Then to return to IRQ mode after the
                       
  485 000002D0         ;                   BSPI0_IRQHandler function terminatio
                       n.
  486 000002D0         ;* Input          : none
  487 000002D0         ;* Output         : none
  488 000002D0         ;*******************************************************
                       ************************
  489 000002D0         BSPI0IRQHandler
  490 000002D0                 IRQ_to_SYS
  294 000002D0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000002D4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  491 000002D8 EBFFFFFE        BL               BSPI0_IRQHandler
  492 000002DC                 SYS_to_IRQ
  306 000002DC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000002E0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000002E4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000002E8         ; pending bit.
  493 000002E8         ;*******************************************************
                       ************************
  494 000002E8         ;* Function Name  : BSPI1IRQHandler
  495 000002E8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  496 000002E8         ;                   the BSPI1_IRQHandler function locate
                       d in 71x_it.c.
  497 000002E8         ;                   Then to return to IRQ mode after the
                       
  498 000002E8         ;                   BSPI1_IRQHandler function terminatio
                       n.
  499 000002E8         ;* Input          : none
  500 000002E8         ;* Output         : none
  501 000002E8         ;*******************************************************
                       ************************
  502 000002E8         BSPI1IRQHandler
  503 000002E8                 IRQ_to_SYS
  294 000002E8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000002EC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  504 000002F0 EBFFFFFE        BL               BSPI1_IRQHandler
  505 000002F4                 SYS_to_IRQ
  306 000002F4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000002F8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000002FC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000300         ; pending bit.
  506 00000300         ;*******************************************************
                       ************************



ARM Macro Assembler    Page 19 


  507 00000300         ;* Function Name  : I2C0IRQHandler
  508 00000300         ;* Description    : This function used to switch to SYS 
                       mode before entering
  509 00000300         ;                   the I2C0_IRQHandler function located
                        in 71x_it.c.
  510 00000300         ;                   Then to return to IRQ mode after the
                       
  511 00000300         ;                   I2C0_IRQHandler function termination
                       .
  512 00000300         ;* Input          : none
  513 00000300         ;* Output         : none
  514 00000300         ;*******************************************************
                       ************************
  515 00000300         I2C0IRQHandler
  516 00000300                 IRQ_to_SYS
  294 00000300 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000304 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  517 00000308 EBFFFFFE        BL               I2C0_IRQHandler
  518 0000030C                 SYS_to_IRQ
  306 0000030C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000310 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000314 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000318         ; pending bit.
  519 00000318         ;*******************************************************
                       ************************
  520 00000318         ;* Function Name  : I2C1IRQHandler
  521 00000318         ;* Description    : This function used to switch to SYS 
                       mode before entering
  522 00000318         ;                   the I2C1_IRQHandler function located
                        in 71x_it.c.
  523 00000318         ;                   Then to return to IRQ mode after the
                       
  524 00000318         ;                   I2C1_IRQHandler function termination
                       .
  525 00000318         ;* Input          : none
  526 00000318         ;* Output         : none
  527 00000318         ;*******************************************************
                       ************************
  528 00000318         I2C1IRQHandler
  529 00000318                 IRQ_to_SYS
  294 00000318 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000031C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  530 00000320 EBFFFFFE        BL               I2C1_IRQHandler
  531 00000324                 SYS_to_IRQ
  306 00000324 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000328 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000032C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the



ARM Macro Assembler    Page 20 


  309 00000330         ; pending bit.
  532 00000330         ;*******************************************************
                       ************************
  533 00000330         ;* Function Name  : CANIRQHandler
  534 00000330         ;* Description    : This function used to switch to SYS 
                       mode before entering
  535 00000330         ;                   the CAN_IRQHandler function located 
                       in 71x_it.c.
  536 00000330         ;                   Then to return to IRQ mode after the
                       
  537 00000330         ;                   CAN_IRQHandler function termination.
                       
  538 00000330         ;* Input          : none
  539 00000330         ;* Output         : none
  540 00000330         ;*******************************************************
                       ************************
  541 00000330         CANIRQHandler
  542 00000330                 IRQ_to_SYS
  294 00000330 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000334 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  543 00000338 EBFFFFFE        BL               CAN_IRQHandler
  544 0000033C                 SYS_to_IRQ
  306 0000033C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000340 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000344 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000348         ; pending bit.
  545 00000348         ;*******************************************************
                       ************************
  546 00000348         ;* Function Name  : ADC12IRQHandler
  547 00000348         ;* Description    : This function used to switch to SYS 
                       mode before entering
  548 00000348         ;                   the ADC12_IRQHandler function locate
                       d in 71x_it.c.
  549 00000348         ;                   Then to return to IRQ mode after the
                       
  550 00000348         ;                   ADC12_IRQHandler function terminatio
                       n.
  551 00000348         ;* Input          : none
  552 00000348         ;* Output         : none
  553 00000348         ;*******************************************************
                       ************************
  554 00000348         ADC12IRQHandler
  555 00000348                 IRQ_to_SYS
  294 00000348 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000034C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  556 00000350 EBFFFFFE        BL               ADC12_IRQHandler
  557 00000354                 SYS_to_IRQ
  306 00000354 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000358 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.



ARM Macro Assembler    Page 21 


  308 0000035C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000360         ; pending bit.
  558 00000360         ;*******************************************************
                       ************************
  559 00000360         ;* Function Name  : T1TIMIIRQHandler
  560 00000360         ;* Description    : This function used to switch to SYS 
                       mode before entering
  561 00000360         ;                   the T1TIMI_IRQHandler function locat
                       ed in 71x_it.c.
  562 00000360         ;                   Then to return to IRQ mode after the
                       
  563 00000360         ;                   T1TIMI_IRQHandler function terminati
                       on.
  564 00000360         ;* Input          : none
  565 00000360         ;* Output         : none
  566 00000360         ;*******************************************************
                       ************************
  567 00000360         T1TIMIIRQHandler
  568 00000360                 IRQ_to_SYS
  294 00000360 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000364 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  569 00000368 EBFFFFFE        BL               T1TIMI_IRQHandler
  570 0000036C                 SYS_to_IRQ
  306 0000036C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000370 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000374 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000378         ; pending bit.
  571 00000378         ;*******************************************************
                       ************************
  572 00000378         ;* Function Name  : T2TIMIIRQHandler
  573 00000378         ;* Description    : This function used to switch to SYS 
                       mode before entering
  574 00000378         ;                   the T2TIMI_IRQHandler function locat
                       ed in 71x_it.c.
  575 00000378         ;                   Then to return to IRQ mode after the
                       
  576 00000378         ;                   T2TIMI_IRQHandler function terminati
                       on.
  577 00000378         ;* Input          : none
  578 00000378         ;* Output         : none
  579 00000378         ;*******************************************************
                       ************************
  580 00000378         T2TIMIIRQHandler
  581 00000378                 IRQ_to_SYS
  294 00000378 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000037C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  582 00000380 EBFFFFFE        BL               T2TIMI_IRQHandler
  583 00000384                 SYS_to_IRQ
  306 00000384 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 



ARM Macro Assembler    Page 22 


                                                            register.
  307 00000388 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000038C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000390         ; pending bit.
  584 00000390         ;*******************************************************
                       ************************
  585 00000390         ;* Function Name  : T3TIMIIRQHandler
  586 00000390         ;* Description    : This function used to switch to SYS 
                       mode before entering
  587 00000390         ;                   the T3TIMI_IRQHandler function locat
                       ed in 71x_it.c.
  588 00000390         ;                   Then to return to IRQ mode after the
                       
  589 00000390         ;                   T3TIMI_IRQHandler function terminati
                       on.
  590 00000390         ;* Input          : none
  591 00000390         ;* Output         : none
  592 00000390         ;*******************************************************
                       ************************
  593 00000390         T3TIMIIRQHandler
  594 00000390                 IRQ_to_SYS
  294 00000390 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 00000394 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  595 00000398 EBFFFFFE        BL               T3TIMI_IRQHandler
  596 0000039C                 SYS_to_IRQ
  306 0000039C E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000003A0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000003A4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000003A8         ; pending bit.
  597 000003A8         ;*******************************************************
                       ************************
  598 000003A8         ;* Function Name  : HDLCIRQHandler
  599 000003A8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  600 000003A8         ;                   the HDLC_IRQHandler function located
                        in 71x_it.c.
  601 000003A8         ;                   Then to return to IRQ mode after the
                       
  602 000003A8         ;                   HDLC_IRQHandler function termination
                       .
  603 000003A8         ;* Input          : none
  604 000003A8         ;* Output         : none
  605 000003A8         ;*******************************************************
                       ************************
  606 000003A8         HDLCIRQHandler
  607 000003A8                 IRQ_to_SYS
  294 000003A8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000003AC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.



ARM Macro Assembler    Page 23 


  608 000003B0 EBFFFFFE        BL               HDLC_IRQHandler
  609 000003B4                 SYS_to_IRQ
  306 000003B4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000003B8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000003BC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000003C0         ; pending bit.
  610 000003C0         ;*******************************************************
                       ************************
  611 000003C0         ;* Function Name  : USBLPIRQHandler
  612 000003C0         ;* Description    : This function used to switch to SYS 
                       mode before entering
  613 000003C0         ;                   the USBLP_IRQHandler function locate
                       d in 71x_it.c.
  614 000003C0         ;                   Then to return to IRQ mode after the
                       
  615 000003C0         ;                   USBLP_IRQHandler function terminatio
                       n.
  616 000003C0         ;* Input          : none
  617 000003C0         ;* Output         : none
  618 000003C0         ;*******************************************************
                       ************************
  619 000003C0         USBLPIRQHandler
  620 000003C0                 IRQ_to_SYS
  294 000003C0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000003C4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  621 000003C8 EBFFFFFE        BL               USBLP_IRQHandler
  622 000003CC                 SYS_to_IRQ
  306 000003CC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000003D0 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000003D4 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000003D8         ; pending bit.
  623 000003D8         ;*******************************************************
                       ************************
  624 000003D8         ;* Function Name  : T0TOIIRQHandler
  625 000003D8         ;* Description    : This function used to switch to SYS 
                       mode before entering
  626 000003D8         ;                   the T0TOI_IRQHandler function locate
                       d in 71x_it.c.
  627 000003D8         ;                   Then to return to IRQ mode after the
                       
  628 000003D8         ;                   T0TOI_IRQHandler function terminatio
                       n.
  629 000003D8         ;* Input          : none
  630 000003D8         ;* Output         : none
  631 000003D8         ;*******************************************************
                       ************************
  632 000003D8         T0TOIIRQHandler
  633 000003D8                 IRQ_to_SYS
  294 000003D8 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo



ARM Macro Assembler    Page 24 


                                                            de
  295 000003DC E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  634 000003E0 EBFFFFFE        BL               T0TOI_IRQHandler
  635 000003E4                 SYS_to_IRQ
  306 000003E4 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 000003E8 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 000003EC E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 000003F0         ; pending bit.
  636 000003F0         ;*******************************************************
                       ************************
  637 000003F0         ;* Function Name  : T0OC1IRQHandler
  638 000003F0         ;* Description    : This function used to switch to SYS 
                       mode before entering
  639 000003F0         ;                   the T0OC1_IRQHandler function locate
                       d in 71x_it.c.
  640 000003F0         ;                   Then to return to IRQ mode after the
                       
  641 000003F0         ;                   T0OC1_IRQHandler function terminatio
                       n.
  642 000003F0         ;* Input          : none
  643 000003F0         ;* Output         : none
  644 000003F0         ;*******************************************************
                       ************************
  645 000003F0         T0OC1IRQHandler
  646 000003F0                 IRQ_to_SYS
  294 000003F0 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 000003F4 E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  647 000003F8 EBFFFFFE        BL               T0OC1_IRQHandler
  648 000003FC                 SYS_to_IRQ
  306 000003FC E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000400 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 00000404 E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000408         ; pending bit.
  649 00000408         ;*******************************************************
                       ************************
  650 00000408         ;* Function Name  : T0OC2IRQHandler
  651 00000408         ;* Description    : This function used to switch to SYS 
                       mode before entering
  652 00000408         ;                   the T0OC2_IRQHandler function locate
                       d in 71x_it.c.
  653 00000408         ;                   Then to return to IRQ mode after the
                       
  654 00000408         ;                   T0OC2_IRQHandler function terminatio
                       n.
  655 00000408         ;* Input          : none
  656 00000408         ;* Output         : none
  657 00000408         ;*******************************************************
                       ************************



ARM Macro Assembler    Page 25 


  658 00000408         T0OC2IRQHandler
  659 00000408                 IRQ_to_SYS
  294 00000408 E321F01F        MSR              cpsr_c,#0x1F ; Switch to SYS mo
                                                            de
  295 0000040C E92D4000        STMFD            sp!,{lr}    ; Save the link reg
                                                            ister.
  660 00000410 EBFFFFFE        BL               T0OC2_IRQHandler
  661 00000414                 SYS_to_IRQ
  306 00000414 E8BD4000        LDMFD            sp!,{lr}    ; Restore the link 
                                                            register.
  307 00000418 E321F0D2        MSR              cpsr_c,#0xD2 ; Switch to IRQ mo
                                                            de.
  308 0000041C E1A0F00E        MOV              pc,lr       ; Return to IRQHand
                                                            ler routine to clea
                                                            r the
  309 00000420         ; pending bit.
  662 00000420         
  663 00000420         
  664 00000420 00000000 
              FFFFF800         LTORG
  665 00000428         
  666 00000428                 END
Command Line: --debug --xref --depend=.\output\71x_vect.d -o.\output\71x_vect.o
 -I"D:\Keil 5\ARM\RV31\INC" -I"D:\Keil 5\ARM\CMSIS\Include" -I"D:\Keil 5\ARM\In
c\ST\71x" --list=.\71x_vect.lst ..\str71x\71x_vect.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC12IRQHandler 00000348

Symbol: ADC12IRQHandler
   Definitions
      At line 554 in file ..\str71x\71x_vect.s
   Uses
      At line 133 in file ..\str71x\71x_vect.s
Comment: ADC12IRQHandler used once
ADC12_Addr 00000088

Symbol: ADC12_Addr
   Definitions
      At line 133 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: ADC12_Addr unused
Abort_Addr 00000030

Symbol: Abort_Addr
   Definitions
      At line 106 in file ..\str71x\71x_vect.s
   Uses
      At line 93 in file ..\str71x\71x_vect.s
Comment: Abort_Addr used once
BSPI0IRQHandler 000002D0

Symbol: BSPI0IRQHandler
   Definitions
      At line 489 in file ..\str71x\71x_vect.s
   Uses
      At line 128 in file ..\str71x\71x_vect.s
Comment: BSPI0IRQHandler used once
BSPI0_ADDR 00000074

Symbol: BSPI0_ADDR
   Definitions
      At line 128 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: BSPI0_ADDR unused
BSPI1IRQHandler 000002E8

Symbol: BSPI1IRQHandler
   Definitions
      At line 502 in file ..\str71x\71x_vect.s
   Uses
      At line 129 in file ..\str71x\71x_vect.s
Comment: BSPI1IRQHandler used once
BSPI1_Addr 00000078

Symbol: BSPI1_Addr
   Definitions
      At line 129 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: BSPI1_Addr unused
CANIRQHandler 00000330

Symbol: CANIRQHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 541 in file ..\str71x\71x_vect.s
   Uses
      At line 132 in file ..\str71x\71x_vect.s
Comment: CANIRQHandler used once
CAN_Addr 00000084

Symbol: CAN_Addr
   Definitions
      At line 132 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: CAN_Addr unused
DataAbortHandler 00000158

Symbol: DataAbortHandler
   Definitions
      At line 262 in file ..\str71x\71x_vect.s
   Uses
      At line 106 in file ..\str71x\71x_vect.s
Comment: DataAbortHandler used once
FIQHandler 00000178

Symbol: FIQHandler
   Definitions
      At line 278 in file ..\str71x\71x_vect.s
   Uses
      At line 109 in file ..\str71x\71x_vect.s
Comment: FIQHandler used once
FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 109 in file ..\str71x\71x_vect.s
   Uses
      At line 96 in file ..\str71x\71x_vect.s
Comment: FIQ_Addr used once
FLASHIRQHandler 000001B0

Symbol: FLASHIRQHandler
   Definitions
      At line 333 in file ..\str71x\71x_vect.s
   Uses
      At line 116 in file ..\str71x\71x_vect.s
Comment: FLASHIRQHandler used once
FLASH_Addr 00000044

Symbol: FLASH_Addr
   Definitions
      At line 116 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: FLASH_Addr unused
HDLCIRQHandler 000003A8

Symbol: HDLCIRQHandler
   Definitions
      At line 606 in file ..\str71x\71x_vect.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 140 in file ..\str71x\71x_vect.s
Comment: HDLCIRQHandler used once
HDLC_Addr 000000A4

Symbol: HDLC_Addr
   Definitions
      At line 140 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: HDLC_Addr unused
I2C0IRQHandler 00000300

Symbol: I2C0IRQHandler
   Definitions
      At line 515 in file ..\str71x\71x_vect.s
   Uses
      At line 130 in file ..\str71x\71x_vect.s
Comment: I2C0IRQHandler used once
I2C0ITERRIRQHandler 00000240

Symbol: I2C0ITERRIRQHandler
   Definitions
      At line 411 in file ..\str71x\71x_vect.s
   Uses
      At line 122 in file ..\str71x\71x_vect.s
Comment: I2C0ITERRIRQHandler used once
I2C0ITERR_Addr 0000005C

Symbol: I2C0ITERR_Addr
   Definitions
      At line 122 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: I2C0ITERR_Addr unused
I2C0_Addr 0000007C

Symbol: I2C0_Addr
   Definitions
      At line 130 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: I2C0_Addr unused
I2C1IRQHandler 00000318

Symbol: I2C1IRQHandler
   Definitions
      At line 528 in file ..\str71x\71x_vect.s
   Uses
      At line 131 in file ..\str71x\71x_vect.s
Comment: I2C1IRQHandler used once
I2C1ITERRIRQHandler 00000258

Symbol: I2C1ITERRIRQHandler
   Definitions
      At line 424 in file ..\str71x\71x_vect.s
   Uses
      At line 123 in file ..\str71x\71x_vect.s
Comment: I2C1ITERRIRQHandler used once
I2C1ITERR_ADDR 00000060



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: I2C1ITERR_ADDR
   Definitions
      At line 123 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: I2C1ITERR_ADDR unused
I2C1_Addr 00000080

Symbol: I2C1_Addr
   Definitions
      At line 131 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: I2C1_Addr unused
IRQHandler 000000F8

Symbol: IRQHandler
   Definitions
      At line 220 in file ..\str71x\71x_vect.s
   Uses
      At line 79 in file ..\str71x\71x_vect.s
      At line 108 in file ..\str71x\71x_vect.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 108 in file ..\str71x\71x_vect.s
   Uses
      At line 95 in file ..\str71x\71x_vect.s
Comment: IRQ_Addr used once
PrefetchAbortHandler 00000138

Symbol: PrefetchAbortHandler
   Definitions
      At line 246 in file ..\str71x\71x_vect.s
   Uses
      At line 105 in file ..\str71x\71x_vect.s
Comment: PrefetchAbortHandler used once
Prefetch_Addr 0000002C

Symbol: Prefetch_Addr
   Definitions
      At line 105 in file ..\str71x\71x_vect.s
   Uses
      At line 92 in file ..\str71x\71x_vect.s
Comment: Prefetch_Addr used once
RCCUIRQHandler 000001C8

Symbol: RCCUIRQHandler
   Definitions
      At line 346 in file ..\str71x\71x_vect.s
   Uses
      At line 117 in file ..\str71x\71x_vect.s
Comment: RCCUIRQHandler used once
RCCU_Addr 00000048

Symbol: RCCU_Addr



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 117 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: RCCU_Addr unused
RESET 00000000

Symbol: RESET
   Definitions
      At line 18 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: RESET unused
RTCIRQHandler 000001E0

Symbol: RTCIRQHandler
   Definitions
      At line 359 in file ..\str71x\71x_vect.s
   Uses
      At line 118 in file ..\str71x\71x_vect.s
Comment: RTCIRQHandler used once
RTC_Addr 0000004C

Symbol: RTC_Addr
   Definitions
      At line 118 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: RTC_Addr unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 102 in file ..\str71x\71x_vect.s
   Uses
      At line 89 in file ..\str71x\71x_vect.s
Comment: Reset_Addr used once
ReturnAddress 00000118

Symbol: ReturnAddress
   Definitions
      At line 228 in file ..\str71x\71x_vect.s
   Uses
      At line 224 in file ..\str71x\71x_vect.s
Comment: ReturnAddress used once
SWIHandler 000000DC

Symbol: SWIHandler
   Definitions
      At line 206 in file ..\str71x\71x_vect.s
   Uses
      At line 104 in file ..\str71x\71x_vect.s
Comment: SWIHandler used once
SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 104 in file ..\str71x\71x_vect.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 91 in file ..\str71x\71x_vect.s
Comment: SWI_Addr used once
T0OC1IRQHandler 000003F0

Symbol: T0OC1IRQHandler
   Definitions
      At line 645 in file ..\str71x\71x_vect.s
   Uses
      At line 145 in file ..\str71x\71x_vect.s
Comment: T0OC1IRQHandler used once
T0OC1_Addr 000000B8

Symbol: T0OC1_Addr
   Definitions
      At line 145 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T0OC1_Addr unused
T0OC2IRQHandler 00000408

Symbol: T0OC2IRQHandler
   Definitions
      At line 658 in file ..\str71x\71x_vect.s
   Uses
      At line 146 in file ..\str71x\71x_vect.s
Comment: T0OC2IRQHandler used once
T0OC2_Addr 000000BC

Symbol: T0OC2_Addr
   Definitions
      At line 146 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T0OC2_Addr unused
T0TIMIIRQHandler 00000198

Symbol: T0TIMIIRQHandler
   Definitions
      At line 320 in file ..\str71x\71x_vect.s
   Uses
      At line 115 in file ..\str71x\71x_vect.s
Comment: T0TIMIIRQHandler used once
T0TIMI_Addr 00000040

Symbol: T0TIMI_Addr
   Definitions
      At line 115 in file ..\str71x\71x_vect.s
   Uses
      At line 78 in file ..\str71x\71x_vect.s
Comment: T0TIMI_Addr used once
T0TOIIRQHandler 000003D8

Symbol: T0TOIIRQHandler
   Definitions
      At line 632 in file ..\str71x\71x_vect.s
   Uses
      At line 144 in file ..\str71x\71x_vect.s
Comment: T0TOIIRQHandler used once
T0TOI_Addr 000000B4



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols


Symbol: T0TOI_Addr
   Definitions
      At line 144 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T0TOI_Addr unused
T1TIMIIRQHandler 00000360

Symbol: T1TIMIIRQHandler
   Definitions
      At line 567 in file ..\str71x\71x_vect.s
   Uses
      At line 134 in file ..\str71x\71x_vect.s
Comment: T1TIMIIRQHandler used once
T1TIMI_Addr 0000008C

Symbol: T1TIMI_Addr
   Definitions
      At line 134 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T1TIMI_Addr unused
T2TIMIIRQHandler 00000378

Symbol: T2TIMIIRQHandler
   Definitions
      At line 580 in file ..\str71x\71x_vect.s
   Uses
      At line 135 in file ..\str71x\71x_vect.s
Comment: T2TIMIIRQHandler used once
T2TIMI_Addr 00000090

Symbol: T2TIMI_Addr
   Definitions
      At line 135 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T2TIMI_Addr unused
T3TIMIIRQHandler 00000390

Symbol: T3TIMIIRQHandler
   Definitions
      At line 593 in file ..\str71x\71x_vect.s
   Uses
      At line 136 in file ..\str71x\71x_vect.s
Comment: T3TIMIIRQHandler used once
T3TIMI_Addr 00000094

Symbol: T3TIMI_Addr
   Definitions
      At line 136 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: T3TIMI_Addr unused
UART0IRQHandler 00000270

Symbol: UART0IRQHandler
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

      At line 437 in file ..\str71x\71x_vect.s
   Uses
      At line 124 in file ..\str71x\71x_vect.s
Comment: UART0IRQHandler used once
UART0_Addr 00000064

Symbol: UART0_Addr
   Definitions
      At line 124 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: UART0_Addr unused
UART1IRQHandler 00000288

Symbol: UART1IRQHandler
   Definitions
      At line 450 in file ..\str71x\71x_vect.s
   Uses
      At line 125 in file ..\str71x\71x_vect.s
Comment: UART1IRQHandler used once
UART1_Addr 00000068

Symbol: UART1_Addr
   Definitions
      At line 125 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: UART1_Addr unused
UART2IRQHandler 000002A0

Symbol: UART2IRQHandler
   Definitions
      At line 463 in file ..\str71x\71x_vect.s
   Uses
      At line 126 in file ..\str71x\71x_vect.s
Comment: UART2IRQHandler used once
UART2_ADDR 0000006C

Symbol: UART2_ADDR
   Definitions
      At line 126 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: UART2_ADDR unused
UART3IRQHandler 000002B8

Symbol: UART3IRQHandler
   Definitions
      At line 476 in file ..\str71x\71x_vect.s
   Uses
      At line 127 in file ..\str71x\71x_vect.s
Comment: UART3IRQHandler used once
UART3_ADDR 00000070

Symbol: UART3_ADDR
   Definitions
      At line 127 in file ..\str71x\71x_vect.s
   Uses
      None



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

Comment: UART3_ADDR unused
USBHPIRQHandler 00000228

Symbol: USBHPIRQHandler
   Definitions
      At line 398 in file ..\str71x\71x_vect.s
   Uses
      At line 121 in file ..\str71x\71x_vect.s
Comment: USBHPIRQHandler used once
USBHP_Addr 00000058

Symbol: USBHP_Addr
   Definitions
      At line 121 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: USBHP_Addr unused
USBLPIRQHandler 000003C0

Symbol: USBLPIRQHandler
   Definitions
      At line 619 in file ..\str71x\71x_vect.s
   Uses
      At line 141 in file ..\str71x\71x_vect.s
Comment: USBLPIRQHandler used once
USBLP_Addr 000000A8

Symbol: USBLP_Addr
   Definitions
      At line 141 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: USBLP_Addr unused
UndefinedHandler 000000C0

Symbol: UndefinedHandler
   Definitions
      At line 192 in file ..\str71x\71x_vect.s
   Uses
      At line 103 in file ..\str71x\71x_vect.s
Comment: UndefinedHandler used once
Undefined_Addr 00000024

Symbol: Undefined_Addr
   Definitions
      At line 103 in file ..\str71x\71x_vect.s
   Uses
      At line 90 in file ..\str71x\71x_vect.s
Comment: Undefined_Addr used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 89 in file ..\str71x\71x_vect.s
   Uses
      At line 84 in file ..\str71x\71x_vect.s
Comment: Vectors used once
WDGIRQHandler 000001F8




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

Symbol: WDGIRQHandler
   Definitions
      At line 372 in file ..\str71x\71x_vect.s
   Uses
      At line 119 in file ..\str71x\71x_vect.s
Comment: WDGIRQHandler used once
WDG_Addr 00000050

Symbol: WDG_Addr
   Definitions
      At line 119 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: WDG_Addr unused
XTIIRQHandler 00000210

Symbol: XTIIRQHandler
   Definitions
      At line 385 in file ..\str71x\71x_vect.s
   Uses
      At line 120 in file ..\str71x\71x_vect.s
Comment: XTIIRQHandler used once
XTI_Addr 00000054

Symbol: XTI_Addr
   Definitions
      At line 120 in file ..\str71x\71x_vect.s
   Uses
      None
Comment: XTI_Addr unused
70 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CICR_off_addr 00000004

Symbol: CICR_off_addr
   Definitions
      At line 21 in file ..\str71x\71x_vect.s
   Uses
      At line 231 in file ..\str71x\71x_vect.s
Comment: CICR_off_addr used once
EIC_base_addr FFFFF800

Symbol: EIC_base_addr
   Definitions
      At line 20 in file ..\str71x\71x_vect.s
   Uses
      At line 225 in file ..\str71x\71x_vect.s
      At line 230 in file ..\str71x\71x_vect.s

IPR_off_addr 00000040

Symbol: IPR_off_addr
   Definitions
      At line 23 in file ..\str71x\71x_vect.s
   Uses
      At line 234 in file ..\str71x\71x_vect.s
Comment: IPR_off_addr used once
IVR_off_addr 00000018

Symbol: IVR_off_addr
   Definitions
      At line 22 in file ..\str71x\71x_vect.s
   Uses
      At line 226 in file ..\str71x\71x_vect.s
Comment: IVR_off_addr used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC12_IRQHandler 00000000

Symbol: ADC12_IRQHandler
   Definitions
      At line 64 in file ..\str71x\71x_vect.s
   Uses
      At line 556 in file ..\str71x\71x_vect.s
Comment: ADC12_IRQHandler used once
Abort_Handler 00000000

Symbol: Abort_Handler
   Definitions
      At line 39 in file ..\str71x\71x_vect.s
   Uses
      At line 266 in file ..\str71x\71x_vect.s
Comment: Abort_Handler used once
BSPI0_IRQHandler 00000000

Symbol: BSPI0_IRQHandler
   Definitions
      At line 59 in file ..\str71x\71x_vect.s
   Uses
      At line 491 in file ..\str71x\71x_vect.s
Comment: BSPI0_IRQHandler used once
BSPI1_IRQHandler 00000000

Symbol: BSPI1_IRQHandler
   Definitions
      At line 60 in file ..\str71x\71x_vect.s
   Uses
      At line 504 in file ..\str71x\71x_vect.s
Comment: BSPI1_IRQHandler used once
CAN_IRQHandler 00000000

Symbol: CAN_IRQHandler
   Definitions
      At line 63 in file ..\str71x\71x_vect.s
   Uses
      At line 543 in file ..\str71x\71x_vect.s
Comment: CAN_IRQHandler used once
FIQ_Handler 00000000

Symbol: FIQ_Handler
   Definitions
      At line 40 in file ..\str71x\71x_vect.s
   Uses
      At line 282 in file ..\str71x\71x_vect.s
Comment: FIQ_Handler used once
FLASH_IRQHandler 00000000

Symbol: FLASH_IRQHandler
   Definitions
      At line 47 in file ..\str71x\71x_vect.s
   Uses
      At line 335 in file ..\str71x\71x_vect.s
Comment: FLASH_IRQHandler used once
HDLC_IRQHandler 00000000

Symbol: HDLC_IRQHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 68 in file ..\str71x\71x_vect.s
   Uses
      At line 608 in file ..\str71x\71x_vect.s
Comment: HDLC_IRQHandler used once
I2C0ITERR_IRQHandler 00000000

Symbol: I2C0ITERR_IRQHandler
   Definitions
      At line 53 in file ..\str71x\71x_vect.s
   Uses
      At line 413 in file ..\str71x\71x_vect.s
Comment: I2C0ITERR_IRQHandler used once
I2C0_IRQHandler 00000000

Symbol: I2C0_IRQHandler
   Definitions
      At line 61 in file ..\str71x\71x_vect.s
   Uses
      At line 517 in file ..\str71x\71x_vect.s
Comment: I2C0_IRQHandler used once
I2C1ITERR_IRQHandler 00000000

Symbol: I2C1ITERR_IRQHandler
   Definitions
      At line 54 in file ..\str71x\71x_vect.s
   Uses
      At line 426 in file ..\str71x\71x_vect.s
Comment: I2C1ITERR_IRQHandler used once
I2C1_IRQHandler 00000000

Symbol: I2C1_IRQHandler
   Definitions
      At line 62 in file ..\str71x\71x_vect.s
   Uses
      At line 530 in file ..\str71x\71x_vect.s
Comment: I2C1_IRQHandler used once
Prefetch_Handler 00000000

Symbol: Prefetch_Handler
   Definitions
      At line 38 in file ..\str71x\71x_vect.s
   Uses
      At line 250 in file ..\str71x\71x_vect.s
Comment: Prefetch_Handler used once
RCCU_IRQHandler 00000000

Symbol: RCCU_IRQHandler
   Definitions
      At line 48 in file ..\str71x\71x_vect.s
   Uses
      At line 348 in file ..\str71x\71x_vect.s
Comment: RCCU_IRQHandler used once
RTC_IRQHandler 00000000

Symbol: RTC_IRQHandler
   Definitions
      At line 49 in file ..\str71x\71x_vect.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 361 in file ..\str71x\71x_vect.s
Comment: RTC_IRQHandler used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 30 in file ..\str71x\71x_vect.s
   Uses
      At line 102 in file ..\str71x\71x_vect.s
Comment: Reset_Handler used once
SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 37 in file ..\str71x\71x_vect.s
   Uses
      At line 209 in file ..\str71x\71x_vect.s
Comment: SWI_Handler used once
T0OC1_IRQHandler 00000000

Symbol: T0OC1_IRQHandler
   Definitions
      At line 71 in file ..\str71x\71x_vect.s
   Uses
      At line 647 in file ..\str71x\71x_vect.s
Comment: T0OC1_IRQHandler used once
T0OC2_IRQHandler 00000000

Symbol: T0OC2_IRQHandler
   Definitions
      At line 72 in file ..\str71x\71x_vect.s
   Uses
      At line 660 in file ..\str71x\71x_vect.s
Comment: T0OC2_IRQHandler used once
T0TIMI_IRQHandler 00000000

Symbol: T0TIMI_IRQHandler
   Definitions
      At line 46 in file ..\str71x\71x_vect.s
   Uses
      At line 322 in file ..\str71x\71x_vect.s
Comment: T0TIMI_IRQHandler used once
T0TOI_IRQHandler 00000000

Symbol: T0TOI_IRQHandler
   Definitions
      At line 70 in file ..\str71x\71x_vect.s
   Uses
      At line 634 in file ..\str71x\71x_vect.s
Comment: T0TOI_IRQHandler used once
T1TIMI_IRQHandler 00000000

Symbol: T1TIMI_IRQHandler
   Definitions
      At line 65 in file ..\str71x\71x_vect.s
   Uses
      At line 569 in file ..\str71x\71x_vect.s
Comment: T1TIMI_IRQHandler used once
T2TIMI_IRQHandler 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols


Symbol: T2TIMI_IRQHandler
   Definitions
      At line 66 in file ..\str71x\71x_vect.s
   Uses
      At line 582 in file ..\str71x\71x_vect.s
Comment: T2TIMI_IRQHandler used once
T3TIMI_IRQHandler 00000000

Symbol: T3TIMI_IRQHandler
   Definitions
      At line 67 in file ..\str71x\71x_vect.s
   Uses
      At line 595 in file ..\str71x\71x_vect.s
Comment: T3TIMI_IRQHandler used once
UART0_IRQHandler 00000000

Symbol: UART0_IRQHandler
   Definitions
      At line 55 in file ..\str71x\71x_vect.s
   Uses
      At line 439 in file ..\str71x\71x_vect.s
Comment: UART0_IRQHandler used once
UART1_IRQHandler 00000000

Symbol: UART1_IRQHandler
   Definitions
      At line 56 in file ..\str71x\71x_vect.s
   Uses
      At line 452 in file ..\str71x\71x_vect.s
Comment: UART1_IRQHandler used once
UART2_IRQHandler 00000000

Symbol: UART2_IRQHandler
   Definitions
      At line 57 in file ..\str71x\71x_vect.s
   Uses
      At line 465 in file ..\str71x\71x_vect.s
Comment: UART2_IRQHandler used once
UART3_IRQHandler 00000000

Symbol: UART3_IRQHandler
   Definitions
      At line 58 in file ..\str71x\71x_vect.s
   Uses
      At line 478 in file ..\str71x\71x_vect.s
Comment: UART3_IRQHandler used once
USBHP_IRQHandler 00000000

Symbol: USBHP_IRQHandler
   Definitions
      At line 52 in file ..\str71x\71x_vect.s
   Uses
      At line 400 in file ..\str71x\71x_vect.s
Comment: USBHP_IRQHandler used once
USBLP_IRQHandler 00000000

Symbol: USBLP_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
External symbols

      At line 69 in file ..\str71x\71x_vect.s
   Uses
      At line 621 in file ..\str71x\71x_vect.s
Comment: USBLP_IRQHandler used once
Undefined_Handler 00000000

Symbol: Undefined_Handler
   Definitions
      At line 36 in file ..\str71x\71x_vect.s
   Uses
      At line 195 in file ..\str71x\71x_vect.s
Comment: Undefined_Handler used once
WDG_IRQHandler 00000000

Symbol: WDG_IRQHandler
   Definitions
      At line 50 in file ..\str71x\71x_vect.s
   Uses
      At line 374 in file ..\str71x\71x_vect.s
Comment: WDG_IRQHandler used once
XTI_IRQHandler 00000000

Symbol: XTI_IRQHandler
   Definitions
      At line 51 in file ..\str71x\71x_vect.s
   Uses
      At line 387 in file ..\str71x\71x_vect.s
Comment: XTI_IRQHandler used once
33 symbols
439 symbols in table
