


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for ST STR71x device series 
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2006 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister BOOTCR 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x40000000  default setting
   23 00000000         ; *     0x60000000  when EXTMEM_MODE is used
   24 00000000         ; *     0x20000000  when RAM_MODE is used
   25 00000000         ; *
   26 00000000         ; *  EXTMEM_MODE: when set the device is configured for 
                       code execution
   27 00000000         ; *  from external memory starting at address 0x60000000
                       . The startup
   28 00000000         ; *  vectors are located to 0x60000000.
   29 00000000         ; *
   30 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   31 00000000         ; *  from on-chip RAM starting at address 0x20000000. Th
                       e startup
   32 00000000         ; *  vectors are located to 0x20000000.
   33 00000000         ; */
   34 00000000         
   35 00000000         
   36 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   37 00000000         
   38 00000000 00000010 
                       Mode_USR



ARM Macro Assembler    Page 2 


                               EQU              0x10
   39 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   40 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   41 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   42 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   43 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   44 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   45 00000000         
   46 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   47 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   48 00000000         
   49 00000000         
   50 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   51 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   52 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   53 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   54 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   55 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   56 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   57 00000000         ;// </h>
   58 00000000         
   59 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   60 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   61 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   62 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   63 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   64 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   65 00000000         
   67 00000000 00000108 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz



ARM Macro Assembler    Page 3 


e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   68 00000000         
   69 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   70 00000000         
   71 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   72 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   73 00000508         
   74 00000508         Stack_Top
   75 00000508         
   76 00000508         
   77 00000508         ;// <h> Heap Configuration
   78 00000508         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   79 00000508         ;// </h>
   80 00000508         
   81 00000508 00000000 
                       Heap_Size
                               EQU              0x00000000
   82 00000508         
   83 00000508                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   84 00000000         __heap_base
   85 00000000         Heap_Mem
                               SPACE            Heap_Size
   86 00000000         __heap_limit
   87 00000000         
   88 00000000         
   89 00000000         ; APB Bridge 1 & 2 definitions (Peripherals)
   90 00000000 C0000000 
                       APB1_BASE
                               EQU              0xC0000000  ; APB Bridge 1 Base
                                                             Address
   91 00000000 E0000000 
                       APB2_BASE
                               EQU              0xE0000000  ; APB Bridge 2 Base
                                                             Address
   92 00000000 00000010 
                       CKDIS_OFS
                               EQU              0x10        ; Clock Disable Reg
                                                            ister Offset
   93 00000000 00000014 
                       SWRES_OFS
                               EQU              0x14        ; Software Reset Re
                                                            gister Offset
   94 00000000 000027FB 
                       APB1_Mask
                               EQU              0x27FB      ; APB1 Peripherals 
                                                            Mask
   95 00000000 00007FDD 
                       APB2_Mask
                               EQU              0x7FDD      ; APB2 Peripherals 
                                                            Mask
   96 00000000         
   97 00000000         ;// <e> Reset all Device Peripherals
   98 00000000 00000001 
                       PERIPH_RESET



ARM Macro Assembler    Page 4 


                               EQU              1
   99 00000000         ;// </e>
  100 00000000         
  101 00000000         
  102 00000000         ; External Memory Interface (EMI) definitions
  103 00000000 6C000000 
                       EMI_BASE
                               EQU              0x6C000000  ; EMI Base Address
  104 00000000 00000000 
                       BCON0_OFS
                               EQU              0x00        ; BCON0 Offset
  105 00000000 00000004 
                       BCON1_OFS
                               EQU              0x04        ; BCON1 Offset
  106 00000000 00000008 
                       BCON2_OFS
                               EQU              0x08        ; BCON2 Offset
  107 00000000 0000000C 
                       BCON3_OFS
                               EQU              0x0C        ; BCON3 Offset
  108 00000000         
  109 00000000         ;// <e> External Memory Interface (EMI)
  110 00000000 00000000 
                       EMI_SETUP
                               EQU              0
  111 00000000         
  112 00000000         ;//   <h> Bank Configuration 0 (BCON0)
  113 00000000         ;//     <o.15>    BE: Bank Enable
  114 00000000         ;//     <o.0..1>  B_SIZE: Bus Size  <0=>  8-bit    <1=> 
                       16-bit
  115 00000000         ;//                                 <2=> Reserved  <3=> 
                       Reserved
  116 00000000         ;//     <o.2..5>  C_LENGTH: Cycle Length <0-15>
  117 00000000         ;//               <i> Number of Wait States
  118 00000000         ;//   </h>
  119 00000000 0000801D 
                       BCON0_Val
                               EQU              0x0000801D
  120 00000000         
  121 00000000         ;//   <h> Bank Configuration 1 (BCON1)
  122 00000000         ;//     <o.15>    BE: Bank Enable
  123 00000000         ;//     <o.0..1>  B_SIZE: Bus Size  <0=>  8-bit    <1=> 
                       16-bit
  124 00000000         ;//                                 <2=> Reserved  <3=> 
                       Reserved
  125 00000000         ;//     <o.2..5>  C_LENGTH: Cycle Length <0-15>
  126 00000000         ;//               <i> Number of Wait States
  127 00000000         ;//   </h>
  128 00000000 0000801D 
                       BCON1_Val
                               EQU              0x0000801D
  129 00000000         
  130 00000000         ;//   <h> Bank Configuration 2 (BCON2)
  131 00000000         ;//     <o.15>    BE: Bank Enable
  132 00000000         ;//     <o.0..1>  B_SIZE: Bus Size  <0=>  8-bit    <1=> 
                       16-bit
  133 00000000         ;//                                 <2=> Reserved  <3=> 
                       Reserved
  134 00000000         ;//     <o.2..5>  C_LENGTH: Cycle Length <0-15>



ARM Macro Assembler    Page 5 


  135 00000000         ;//               <i> Number of Wait States
  136 00000000         ;//   </h>
  137 00000000 0000001D 
                       BCON2_Val
                               EQU              0x0000001D
  138 00000000         
  139 00000000         ;//   <h> Bank Configuration 3 (BCON3)
  140 00000000         ;//     <o.15>    BE: Bank Enable
  141 00000000         ;//     <o.0..1>  B_SIZE: Bus Size  <0=>  8-bit    <1=> 
                       16-bit
  142 00000000         ;//                                 <2=> Reserved  <3=> 
                       Reserved
  143 00000000         ;//     <o.2..5>  C_LENGTH: Cycle Length <0-15>
  144 00000000         ;//               <i> Number of Wait States
  145 00000000         ;//   </h>
  146 00000000 0000001D 
                       BCON3_Val
                               EQU              0x0000001D
  147 00000000         
  148 00000000         ;// </e> End of EMI
  149 00000000         
  150 00000000         
  151 00000000         ; GPIO Port 2 definitions (for External Memory Interface
                        setup)
  152 00000000 E0005000 
                       GPIO2_BASE
                               EQU              0xE0005000  ; GPIO2 Base Addres
                                                            s
  153 00000000 00000000 
                       PC0_OFS EQU              0x00        ; PC0 Offset
  154 00000000 00000004 
                       PC1_OFS EQU              0x04        ; PC1 Offset
  155 00000000 00000008 
                       PC2_OFS EQU              0x08        ; PC2 Offset
  156 00000000 0000000C 
                       PD_OFS  EQU              0x0C        ; PD Offset
  157 00000000         
  158 00000000         
  159 00000000         ; Enhanced Interrupt Controller (EIC) definitions
  160 00000000 FFFFF800 
                       EIC_BASE
                               EQU              0xFFFFF800  ; EIC Base Address
  161 00000000 00000000 
                       ICR_OFS EQU              0x00        ; Interrupt Control
                                                             Reg. Offset
  162 00000000 00000008 
                       CIPR_OFS
                               EQU              0x08        ; Curr. Int. Priori
                                                            ty R. Offset
  163 00000000 00000018 
                       IVR_OFS EQU              0x18        ; Interrupt Vector 
                                                            Reg. Offset
  164 00000000 0000001C 
                       FIR_OFS EQU              0x1C        ; Fast Interrupt Re
                                                            g. Offset
  165 00000000 00000020 
                       IER_OFS EQU              0x20        ; Interrupt Enable 
                                                            Reg. Offset
  166 00000000 00000040 



ARM Macro Assembler    Page 6 


                       IPR_OFS EQU              0x40        ; Interrupt Pending
                                                             Reg. Offset
  167 00000000 00000060 
                       SIR0_OFS
                               EQU              0x60        ; Source Interrupt 
                                                            Reg. 0 Offset
  168 00000000         
  169 00000000         ;// <e> Setup EIC and Exception Handlers
  170 00000000 00000001 
                       EIC_SETUP
                               EQU              1
  171 00000000         ;// </e>
  172 00000000         
  173 00000000         
  174 00000000                 PRESERVE8
  175 00000000         
  176 00000000         
  177 00000000         ; Area Definition and Entry Point
  178 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  179 00000000         
  180 00000000                 EXPORT           Vectors
  181 00000000                 AREA             Reset, CODE, READONLY
  182 00000000                 ARM
  183 00000000         
  184 00000000                 IF               EIC_SETUP <> 0
  185 00000000         
  186 00000000         ; Import Exceptions Handlers
  187 00000000                 IMPORT           UndefHandler
  188 00000000                 IMPORT           SWIHandler
  189 00000000                 IMPORT           PAbtHandler
  190 00000000                 IMPORT           DAbtHandler
  191 00000000                 IMPORT           IRQHandler
  192 00000000                 IMPORT           FIQHandler
  193 00000000         
  194 00000000         ; Import IRQ Handlers
  195 00000000                 IMPORT           T0TIMIIRQHandler
  196 00000000                 IMPORT           FLASHIRQHandler
  197 00000000                 IMPORT           RCCUIRQHandler
  198 00000000                 IMPORT           RTCIRQHandler
  199 00000000                 IMPORT           WDGIRQHandler
  200 00000000                 IMPORT           XTIIRQHandler
  201 00000000                 IMPORT           USBHPIRQHandler
  202 00000000                 IMPORT           I2C0ITERRIRQHandler
  203 00000000                 IMPORT           I2C1ITERRIRQHandler
  204 00000000                 IMPORT           UART0IRQHandler
  205 00000000                 IMPORT           UART1IRQHandler
  206 00000000                 IMPORT           UART2IRQHandler
  207 00000000                 IMPORT           UART3IRQHandler
  208 00000000                 IMPORT           BSPI0IRQHandler
  209 00000000                 IMPORT           BSPI1IRQHandler
  210 00000000                 IMPORT           I2C0IRQHandler
  211 00000000                 IMPORT           I2C1IRQHandler
  212 00000000                 IMPORT           CANIRQHandler
  213 00000000                 IMPORT           ADC12IRQHandler
  214 00000000                 IMPORT           T1TIMIIRQHandler
  215 00000000                 IMPORT           T2TIMIIRQHandler
  216 00000000                 IMPORT           T3TIMIIRQHandler
  217 00000000                 IMPORT           HDLCIRQHandler



ARM Macro Assembler    Page 7 


  218 00000000                 IMPORT           USBLPIRQHandler
  219 00000000                 IMPORT           T0TOIIRQHandler
  220 00000000                 IMPORT           T0OC1IRQHandler
  221 00000000                 IMPORT           T0OC2IRQHandler
  222 00000000         
  223 00000000                 ENDIF
  224 00000000         
  225 00000000         ; Exception Vectors
  226 00000000         ;  Mapped to Address 0.
  227 00000000         ;  Absolute addressing mode must be used.
  228 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  229 00000000         
  230 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  231 00000004 E59FF018        LDR              PC, Undef_Addr
  232 00000008 E59FF018        LDR              PC, SWI_Addr
  233 0000000C E59FF018        LDR              PC, PAbt_Addr
  234 00000010 E59FF018        LDR              PC, DAbt_Addr
  235 00000014 E1A00000        NOP                          ; Reserved Vector 
  236 00000018                 IF               EIC_SETUP <> 0
  237 00000018 E59FF018        LDR              PC,IRQ_Addr
  238 0000001C                 ELSE
  240                          ENDIF
  241 0000001C E59FF018        LDR              PC, FIQ_Addr
  242 00000020         
  243 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  244 00000024 00000000 
                       Undef_Addr
                               DCD              UndefHandler
  245 00000028 00000000 
                       SWI_Addr
                               DCD              SWIHandler
  246 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbtHandler
  247 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbtHandler
  248 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  249 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQHandler
  250 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQHandler
  251 00000040         
  252 00000040         
  253 00000040                 IF               EIC_SETUP = 0
  263 00000040         
  264 00000040         ; Peripherals IRQ Handlers Address Table
  265 00000040                 EXPORT           T0TIMI_Addr
  266 00000040 00000000 
                       T0TIMI_Addr
                               DCD              T0TIMIIRQHandler
  267 00000044 00000000 



ARM Macro Assembler    Page 8 


                       FLASH_Addr
                               DCD              FLASHIRQHandler
  268 00000048 00000000 
                       RCCU_Addr
                               DCD              RCCUIRQHandler
  269 0000004C 00000000 
                       RTC_Addr
                               DCD              RTCIRQHandler
  270 00000050 00000000 
                       WDG_Addr
                               DCD              WDGIRQHandler
  271 00000054 00000000 
                       XTI_Addr
                               DCD              XTIIRQHandler
  272 00000058 00000000 
                       USBHP_Addr
                               DCD              USBHPIRQHandler
  273 0000005C 00000000 
                       I2C0ITERR_Addr
                               DCD              I2C0ITERRIRQHandler
  274 00000060 00000000 
                       I2C1ITERR_Addr
                               DCD              I2C1ITERRIRQHandler
  275 00000064 00000000 
                       UART0_Addr
                               DCD              UART0IRQHandler
  276 00000068 00000000 
                       UART1_Addr
                               DCD              UART1IRQHandler
  277 0000006C 00000000 
                       UART2_Addr
                               DCD              UART2IRQHandler
  278 00000070 00000000 
                       UART3_Addr
                               DCD              UART3IRQHandler
  279 00000074 00000000 
                       BSPI0_Addr
                               DCD              BSPI0IRQHandler
  280 00000078 00000000 
                       BSPI1_Addr
                               DCD              BSPI1IRQHandler
  281 0000007C 00000000 
                       I2C0_Addr
                               DCD              I2C0IRQHandler
  282 00000080 00000000 
                       I2C1_Addr
                               DCD              I2C1IRQHandler
  283 00000084 00000000 
                       CAN_Addr
                               DCD              CANIRQHandler
  284 00000088 00000000 
                       ADC12_Addr
                               DCD              ADC12IRQHandler
  285 0000008C 00000000 
                       T1TIMI_Addr
                               DCD              T1TIMIIRQHandler
  286 00000090 00000000 
                       T2TIMI_Addr
                               DCD              T2TIMIIRQHandler



ARM Macro Assembler    Page 9 


  287 00000094 00000000 
                       T3TIMI_Addr
                               DCD              T3TIMIIRQHandler
  288 00000098 00000000        DCD              0           ; Reserved
  289 0000009C 00000000        DCD              0           ; Reserved
  290 000000A0 00000000        DCD              0           ; Reserved
  291 000000A4 00000000 
                       HDLC_Addr
                               DCD              HDLCIRQHandler
  292 000000A8 00000000 
                       USBLP_Addr
                               DCD              USBLPIRQHandler
  293 000000AC 00000000        DCD              0           ; Reserved
  294 000000B0 00000000        DCD              0           ; Reserved
  295 000000B4 00000000 
                       T0TOI_Addr
                               DCD              T0TOIIRQHandler
  296 000000B8 00000000 
                       T0OC1_Addr
                               DCD              T0OC1IRQHandler
  297 000000BC 00000000 
                       T0OC2_Addr
                               DCD              T0OC2IRQHandler
  298 000000C0         
  299 000000C0                 ENDIF
  300 000000C0         
  301 000000C0         
  302 000000C0         ; Reset Handler
  303 000000C0         
  304 000000C0                 EXPORT           Reset_Handler
  305 000000C0         Reset_Handler
  306 000000C0         
  307 000000C0 E1A00000        NOP                          ; Wait for OSC stab
                                                            ilization
  308 000000C4 E1A00000        NOP
  309 000000C8 E1A00000        NOP
  310 000000CC E1A00000        NOP
  311 000000D0 E1A00000        NOP
  312 000000D4 E1A00000        NOP
  313 000000D8 E1A00000        NOP
  314 000000DC E1A00000        NOP
  315 000000E0         
  316 000000E0         
  317 000000E0         ; Reset Peripherals
  318 000000E0                 IF               PERIPH_RESET <> 0
  319 000000E0 E3A01103        LDR              R1, =APB1_BASE
  320 000000E4 E3A0220E        LDR              R2, =APB2_BASE
  321 000000E8 E59F30CC        LDR              R3, =APB1_Mask
  322 000000EC E59F40CC        LDR              R4, =APB2_Mask
  323 000000F0 E1C131B0        STRH             R3, [R1, #CKDIS_OFS] ; Disable 
                                                            Clock for APB1 peri
                                                            ph.
  324 000000F4 E1C241B0        STRH             R4, [R2, #CKDIS_OFS] ; Disable 
                                                            Clock for APB2 peri
                                                            ph.
  325 000000F8 E1C131B4        STRH             R3, [R1, #SWRES_OFS] ; Keep und
                                                            er Reset APB1 perip
                                                            h.
  326 000000FC E1C241B4        STRH             R4, [R2, #SWRES_OFS] ; Keep und



ARM Macro Assembler    Page 10 


                                                            er Reset APB2 perip
                                                            h.
  327 00000100 E3A0000A        MOV              R0, #10
  328 00000104 E2500001 
                       PR_Loop1
                               SUBS             R0, R0, #1  ; Wait that selecte
                                                            d macrocells
  329 00000108 1AFFFFFD        BNE              PR_Loop1    ; enter reset
  330 0000010C E1C101B4        STRH             R0, [R1, #SWRES_OFS] ; Release 
                                                            Reset of APB1 perip
                                                            h.
  331 00000110 E1C201B4        STRH             R0, [R2, #SWRES_OFS] ; Relase R
                                                            eset of APB2 periph
                                                            .
  332 00000114 E1C101B0        STRH             R0, [R1, #CKDIS_OFS] ; Enable C
                                                            lock for APB1 perip
                                                            h.
  333 00000118 E1C201B0        STRH             R0, [R2, #CKDIS_OFS] ; Enable C
                                                            lock for APB2 perip
                                                            h.
  334 0000011C E3A0000A        MOV              R0, #10
  335 00000120 E2500001 
                       PR_Loop2
                               SUBS             R0, R0, #1  ; Wait that selecte
                                                            d macrocells
  336 00000124 1AFFFFFD        BNE              PR_Loop2    ; exit from reset
  337 00000128                 ENDIF
  338 00000128         
  339 00000128         
  340 00000128         ; Setup External Memory Interface (EMI)
  341 00000128                 IF               EMI_SETUP <> 0
  362                          ENDIF
  363 00000128         
  364 00000128         
  365 00000128         ; Setup Enhanced Interrupt Controller
  366 00000128                 IF               EIC_SETUP <> 0
  367 00000128 E59F0094        LDR              R0, =EIC_BASE
  368 0000012C E59F1094        LDR              R1, =0xE59F0000 ; LDR PC,[PC,#o
                                                            fs] (High 16-bits)
  369 00000130 E5801018        STR              R1, [R0, #IVR_OFS] ; Store into
                                                             IVR[31:16]
  370 00000134 E59F1090        LDR              R1, =T0TIMI_Addr 
                                                            ; IRQ Address Table
                                                            
  371 00000138 E59F2090        LDR              R2, =0x0FFF ; Offset Mask
  372 0000013C E0011002        AND              R1, R1, R2  ; Mask Offset
  373 00000140 E59F208C        LDR              R2, =0xF7E0 ; Jump Offset = 0x0
                                                            7E0
  374 00000144         ; 0xFXXX is used to complete the
  375 00000144         ; LDR PC,[PC,#ofs]
  376 00000144         ; 0x07E0 = 0x07E8 - 8 (Prefetch)
  377 00000144         ; 0 = IVR Address + 0x7E8
  378 00000144 E0811002        ADD              R1, R1, R2  ; Add Jump Offset
  379 00000148 E3A02020        MOV              R2, #32     ; Number of Channel
                                                            s
  380 0000014C E3A03060        MOV              R3, #SIR0_OFS ; Offset to SIR0
  381 00000150 E1A04801 
                       EIC_Loop
                               MOV              R4, R1, LSL #16 



ARM Macro Assembler    Page 11 


                                                            ; Use High 16-bits
  382 00000154 E7804003        STR              R4, [R0, R3] ; Store into SIRx
  383 00000158 E2811004        ADD              R1, R1, #4  ; Next IRQ Address
  384 0000015C E2833004        ADD              R3, R3, #4  ; Next SIRx
  385 00000160 E2522001        SUBS             R2, R2, #1  ; Decrement Counter
                                                            
  386 00000164 1AFFFFF9        BNE              EIC_Loop
  387 00000168                 ENDIF
  388 00000168         
  389 00000168         
  390 00000168         ; Memory Remapping
  391 00000168 A0000050 
                       BOOTCR  EQU              0xA0000050  ; Boot Configuratio
                                                            n Register
  392 00000168 00000001 
                       FLASH_BM
                               EQU              0x01        ; Boot Mode: Flash 
                                                            at 0
  393 00000168 00000002 
                       RAM_BM  EQU              0x02        ; Boot Mode: RAM at
                                                             0
  394 00000168 00000003 
                       EXTMEM_BM
                               EQU              0x03        ; Boot Mode: EXTMEM
                                                             at 0
  395 00000168         
  396 00000168                 IF               :DEF:REMAP
  409                          ENDIF
  410 00000168         
  411 00000168         
  412 00000168         ; Setup Stack for each mode
  413 00000168         
  414 00000168 E59F0068        LDR              R0, =Stack_Top
  415 0000016C         
  416 0000016C         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  417 0000016C E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  418 00000170 E1A0D000        MOV              SP, R0
  419 00000174 E2400000        SUB              R0, R0, #UND_Stack_Size
  420 00000178         
  421 00000178         ;  Enter Abort Mode and set its Stack Pointer
  422 00000178 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  423 0000017C E1A0D000        MOV              SP, R0
  424 00000180 E2400000        SUB              R0, R0, #ABT_Stack_Size
  425 00000184         
  426 00000184         ;  Enter FIQ Mode and set its Stack Pointer
  427 00000184 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  428 00000188 E1A0D000        MOV              SP, R0
  429 0000018C E2400000        SUB              R0, R0, #FIQ_Stack_Size
  430 00000190         
  431 00000190         ;  Enter IRQ Mode and set its Stack Pointer
  432 00000190 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  433 00000194 E1A0D000        MOV              SP, R0
  434 00000198 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  435 0000019C         



ARM Macro Assembler    Page 12 


  436 0000019C         ;  Enter Supervisor Mode and set its Stack Pointer
  437 0000019C E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  438 000001A0 E1A0D000        MOV              SP, R0
  439 000001A4 E2400008        SUB              R0, R0, #SVC_Stack_Size
  440 000001A8         
  441 000001A8         ;  Enter User Mode and set its Stack Pointer
  442 000001A8 E321F010        MSR              CPSR_c, #Mode_USR
  443 000001AC                 IF               :DEF:__MICROLIB
  448 000001AC         
  449 000001AC E1A0D000        MOV              SP, R0
  450 000001B0 E24DAB01        SUB              SL, SP, #USR_Stack_Size
  451 000001B4         
  452 000001B4                 ENDIF
  453 000001B4         
  454 000001B4         
  455 000001B4         ; Enter the C code
  456 000001B4         
  457 000001B4                 IMPORT           __main
  458 000001B4 E59F0020        LDR              R0, =__main
  459 000001B8 E12FFF10        BX               R0
  460 000001BC         
  461 000001BC         
  462 000001BC                 IF               :DEF:__MICROLIB
  468 000001BC         ; User Initial Stack & Heap
  469 000001BC 000027FB 
              00007FDD 
              FFFFF800 
              E59F0000 
              00000000 
              00000FFF 
              0000F7E0 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  470 00000000         
  471 00000000                 IMPORT           __use_two_region_memory
  472 00000000                 EXPORT           __user_initial_stackheap
  473 00000000         __user_initial_stackheap
  474 00000000         
  475 00000000 E59F000C        LDR              R0, =  Heap_Mem
  476 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  477 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  478 0000000C E59F3008        LDR              R3, = Stack_Mem
  479 00000010 E12FFF1E        BX               LR
  480 00000014                 ENDIF
  481 00000014         
  482 00000014         
  483 00000014                 END
              00000000 
              00000400 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\output\str71x.d -o.\ou
tput\str71x.o -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Kei
l_v5\ARM\Inc\ST\71x --predefine="__UVISION_VERSION SETA 513" --list=.\str71x.ls
t ..\str71x\STR71x.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 69 in file ..\str71x\STR71x.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 71 in file ..\str71x\STR71x.s
   Uses
      At line 476 in file ..\str71x\STR71x.s
      At line 478 in file ..\str71x\STR71x.s

Stack_Top 00000508

Symbol: Stack_Top
   Definitions
      At line 74 in file ..\str71x\STR71x.s
   Uses
      At line 414 in file ..\str71x\STR71x.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 72 in file ..\str71x\STR71x.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 83 in file ..\str71x\STR71x.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 85 in file ..\str71x\STR71x.s
   Uses
      At line 475 in file ..\str71x\STR71x.s
      At line 477 in file ..\str71x\STR71x.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 84 in file ..\str71x\STR71x.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 86 in file ..\str71x\STR71x.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC12_Addr 00000088

Symbol: ADC12_Addr
   Definitions
      At line 284 in file ..\str71x\STR71x.s
   Uses
      None
Comment: ADC12_Addr unused
BSPI0_Addr 00000074

Symbol: BSPI0_Addr
   Definitions
      At line 279 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BSPI0_Addr unused
BSPI1_Addr 00000078

Symbol: BSPI1_Addr
   Definitions
      At line 280 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BSPI1_Addr unused
CAN_Addr 00000084

Symbol: CAN_Addr
   Definitions
      At line 283 in file ..\str71x\STR71x.s
   Uses
      None
Comment: CAN_Addr unused
DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 247 in file ..\str71x\STR71x.s
   Uses
      At line 234 in file ..\str71x\STR71x.s
Comment: DAbt_Addr used once
EIC_Loop 00000150

Symbol: EIC_Loop
   Definitions
      At line 381 in file ..\str71x\STR71x.s
   Uses
      At line 386 in file ..\str71x\STR71x.s
Comment: EIC_Loop used once
FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 250 in file ..\str71x\STR71x.s
   Uses
      At line 241 in file ..\str71x\STR71x.s
Comment: FIQ_Addr used once
FLASH_Addr 00000044

Symbol: FLASH_Addr



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 267 in file ..\str71x\STR71x.s
   Uses
      None
Comment: FLASH_Addr unused
HDLC_Addr 000000A4

Symbol: HDLC_Addr
   Definitions
      At line 291 in file ..\str71x\STR71x.s
   Uses
      None
Comment: HDLC_Addr unused
I2C0ITERR_Addr 0000005C

Symbol: I2C0ITERR_Addr
   Definitions
      At line 273 in file ..\str71x\STR71x.s
   Uses
      None
Comment: I2C0ITERR_Addr unused
I2C0_Addr 0000007C

Symbol: I2C0_Addr
   Definitions
      At line 281 in file ..\str71x\STR71x.s
   Uses
      None
Comment: I2C0_Addr unused
I2C1ITERR_Addr 00000060

Symbol: I2C1ITERR_Addr
   Definitions
      At line 274 in file ..\str71x\STR71x.s
   Uses
      None
Comment: I2C1ITERR_Addr unused
I2C1_Addr 00000080

Symbol: I2C1_Addr
   Definitions
      At line 282 in file ..\str71x\STR71x.s
   Uses
      None
Comment: I2C1_Addr unused
IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 249 in file ..\str71x\STR71x.s
   Uses
      At line 237 in file ..\str71x\STR71x.s
Comment: IRQ_Addr used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 246 in file ..\str71x\STR71x.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 233 in file ..\str71x\STR71x.s
Comment: PAbt_Addr used once
PR_Loop1 00000104

Symbol: PR_Loop1
   Definitions
      At line 328 in file ..\str71x\STR71x.s
   Uses
      At line 329 in file ..\str71x\STR71x.s
Comment: PR_Loop1 used once
PR_Loop2 00000120

Symbol: PR_Loop2
   Definitions
      At line 335 in file ..\str71x\STR71x.s
   Uses
      At line 336 in file ..\str71x\STR71x.s
Comment: PR_Loop2 used once
RCCU_Addr 00000048

Symbol: RCCU_Addr
   Definitions
      At line 268 in file ..\str71x\STR71x.s
   Uses
      None
Comment: RCCU_Addr unused
RTC_Addr 0000004C

Symbol: RTC_Addr
   Definitions
      At line 269 in file ..\str71x\STR71x.s
   Uses
      None
Comment: RTC_Addr unused
Reset 00000000

Symbol: Reset
   Definitions
      At line 181 in file ..\str71x\STR71x.s
   Uses
      None
Comment: Reset unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 243 in file ..\str71x\STR71x.s
   Uses
      At line 230 in file ..\str71x\STR71x.s
Comment: Reset_Addr used once
Reset_Handler 000000C0

Symbol: Reset_Handler
   Definitions
      At line 305 in file ..\str71x\STR71x.s
   Uses
      At line 243 in file ..\str71x\STR71x.s
      At line 304 in file ..\str71x\STR71x.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 245 in file ..\str71x\STR71x.s
   Uses
      At line 232 in file ..\str71x\STR71x.s
Comment: SWI_Addr used once
T0OC1_Addr 000000B8

Symbol: T0OC1_Addr
   Definitions
      At line 296 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T0OC1_Addr unused
T0OC2_Addr 000000BC

Symbol: T0OC2_Addr
   Definitions
      At line 297 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T0OC2_Addr unused
T0TIMI_Addr 00000040

Symbol: T0TIMI_Addr
   Definitions
      At line 266 in file ..\str71x\STR71x.s
   Uses
      At line 265 in file ..\str71x\STR71x.s
      At line 370 in file ..\str71x\STR71x.s

T0TOI_Addr 000000B4

Symbol: T0TOI_Addr
   Definitions
      At line 295 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T0TOI_Addr unused
T1TIMI_Addr 0000008C

Symbol: T1TIMI_Addr
   Definitions
      At line 285 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T1TIMI_Addr unused
T2TIMI_Addr 00000090

Symbol: T2TIMI_Addr
   Definitions
      At line 286 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T2TIMI_Addr unused
T3TIMI_Addr 00000094




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: T3TIMI_Addr
   Definitions
      At line 287 in file ..\str71x\STR71x.s
   Uses
      None
Comment: T3TIMI_Addr unused
UART0_Addr 00000064

Symbol: UART0_Addr
   Definitions
      At line 275 in file ..\str71x\STR71x.s
   Uses
      None
Comment: UART0_Addr unused
UART1_Addr 00000068

Symbol: UART1_Addr
   Definitions
      At line 276 in file ..\str71x\STR71x.s
   Uses
      None
Comment: UART1_Addr unused
UART2_Addr 0000006C

Symbol: UART2_Addr
   Definitions
      At line 277 in file ..\str71x\STR71x.s
   Uses
      None
Comment: UART2_Addr unused
UART3_Addr 00000070

Symbol: UART3_Addr
   Definitions
      At line 278 in file ..\str71x\STR71x.s
   Uses
      None
Comment: UART3_Addr unused
USBHP_Addr 00000058

Symbol: USBHP_Addr
   Definitions
      At line 272 in file ..\str71x\STR71x.s
   Uses
      None
Comment: USBHP_Addr unused
USBLP_Addr 000000A8

Symbol: USBLP_Addr
   Definitions
      At line 292 in file ..\str71x\STR71x.s
   Uses
      None
Comment: USBLP_Addr unused
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 244 in file ..\str71x\STR71x.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 231 in file ..\str71x\STR71x.s
Comment: Undef_Addr used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 230 in file ..\str71x\STR71x.s
   Uses
      At line 180 in file ..\str71x\STR71x.s
Comment: Vectors used once
WDG_Addr 00000050

Symbol: WDG_Addr
   Definitions
      At line 270 in file ..\str71x\STR71x.s
   Uses
      None
Comment: WDG_Addr unused
XTI_Addr 00000054

Symbol: XTI_Addr
   Definitions
      At line 271 in file ..\str71x\STR71x.s
   Uses
      None
Comment: XTI_Addr unused
40 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 469 in file ..\str71x\STR71x.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 473 in file ..\str71x\STR71x.s
   Uses
      At line 472 in file ..\str71x\STR71x.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 61 in file ..\str71x\STR71x.s
   Uses
      At line 67 in file ..\str71x\STR71x.s
      At line 424 in file ..\str71x\STR71x.s

APB1_BASE C0000000

Symbol: APB1_BASE
   Definitions
      At line 90 in file ..\str71x\STR71x.s
   Uses
      At line 319 in file ..\str71x\STR71x.s
Comment: APB1_BASE used once
APB1_Mask 000027FB

Symbol: APB1_Mask
   Definitions
      At line 94 in file ..\str71x\STR71x.s
   Uses
      At line 321 in file ..\str71x\STR71x.s
Comment: APB1_Mask used once
APB2_BASE E0000000

Symbol: APB2_BASE
   Definitions
      At line 91 in file ..\str71x\STR71x.s
   Uses
      At line 320 in file ..\str71x\STR71x.s
Comment: APB2_BASE used once
APB2_Mask 00007FDD

Symbol: APB2_Mask
   Definitions
      At line 95 in file ..\str71x\STR71x.s
   Uses
      At line 322 in file ..\str71x\STR71x.s
Comment: APB2_Mask used once
BCON0_OFS 00000000

Symbol: BCON0_OFS
   Definitions
      At line 104 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON0_OFS unused
BCON0_Val 0000801D

Symbol: BCON0_Val
   Definitions
      At line 119 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON0_Val unused
BCON1_OFS 00000004




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: BCON1_OFS
   Definitions
      At line 105 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON1_OFS unused
BCON1_Val 0000801D

Symbol: BCON1_Val
   Definitions
      At line 128 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON1_Val unused
BCON2_OFS 00000008

Symbol: BCON2_OFS
   Definitions
      At line 106 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON2_OFS unused
BCON2_Val 0000001D

Symbol: BCON2_Val
   Definitions
      At line 137 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON2_Val unused
BCON3_OFS 0000000C

Symbol: BCON3_OFS
   Definitions
      At line 107 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON3_OFS unused
BCON3_Val 0000001D

Symbol: BCON3_Val
   Definitions
      At line 146 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BCON3_Val unused
BOOTCR A0000050

Symbol: BOOTCR
   Definitions
      At line 391 in file ..\str71x\STR71x.s
   Uses
      None
Comment: BOOTCR unused
CIPR_OFS 00000008

Symbol: CIPR_OFS
   Definitions
      At line 162 in file ..\str71x\STR71x.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: CIPR_OFS unused
CKDIS_OFS 00000010

Symbol: CKDIS_OFS
   Definitions
      At line 92 in file ..\str71x\STR71x.s
   Uses
      At line 323 in file ..\str71x\STR71x.s
      At line 324 in file ..\str71x\STR71x.s
      At line 332 in file ..\str71x\STR71x.s
      At line 333 in file ..\str71x\STR71x.s

EIC_BASE FFFFF800

Symbol: EIC_BASE
   Definitions
      At line 160 in file ..\str71x\STR71x.s
   Uses
      At line 367 in file ..\str71x\STR71x.s
Comment: EIC_BASE used once
EIC_SETUP 00000001

Symbol: EIC_SETUP
   Definitions
      At line 170 in file ..\str71x\STR71x.s
   Uses
      At line 184 in file ..\str71x\STR71x.s
      At line 236 in file ..\str71x\STR71x.s
      At line 253 in file ..\str71x\STR71x.s
      At line 366 in file ..\str71x\STR71x.s

EMI_BASE 6C000000

Symbol: EMI_BASE
   Definitions
      At line 103 in file ..\str71x\STR71x.s
   Uses
      None
Comment: EMI_BASE unused
EMI_SETUP 00000000

Symbol: EMI_SETUP
   Definitions
      At line 110 in file ..\str71x\STR71x.s
   Uses
      At line 341 in file ..\str71x\STR71x.s
Comment: EMI_SETUP used once
EXTMEM_BM 00000003

Symbol: EXTMEM_BM
   Definitions
      At line 394 in file ..\str71x\STR71x.s
   Uses
      None
Comment: EXTMEM_BM unused
FIQ_Stack_Size 00000000




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: FIQ_Stack_Size
   Definitions
      At line 62 in file ..\str71x\STR71x.s
   Uses
      At line 67 in file ..\str71x\STR71x.s
      At line 429 in file ..\str71x\STR71x.s

FIR_OFS 0000001C

Symbol: FIR_OFS
   Definitions
      At line 164 in file ..\str71x\STR71x.s
   Uses
      None
Comment: FIR_OFS unused
FLASH_BM 00000001

Symbol: FLASH_BM
   Definitions
      At line 392 in file ..\str71x\STR71x.s
   Uses
      None
Comment: FLASH_BM unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 47 in file ..\str71x\STR71x.s
   Uses
      At line 417 in file ..\str71x\STR71x.s
      At line 422 in file ..\str71x\STR71x.s
      At line 427 in file ..\str71x\STR71x.s
      At line 432 in file ..\str71x\STR71x.s
      At line 437 in file ..\str71x\STR71x.s

GPIO2_BASE E0005000

Symbol: GPIO2_BASE
   Definitions
      At line 152 in file ..\str71x\STR71x.s
   Uses
      None
Comment: GPIO2_BASE unused
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 81 in file ..\str71x\STR71x.s
   Uses
      At line 85 in file ..\str71x\STR71x.s
      At line 477 in file ..\str71x\STR71x.s

ICR_OFS 00000000

Symbol: ICR_OFS
   Definitions
      At line 161 in file ..\str71x\STR71x.s
   Uses
      None



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Comment: ICR_OFS unused
IER_OFS 00000020

Symbol: IER_OFS
   Definitions
      At line 165 in file ..\str71x\STR71x.s
   Uses
      None
Comment: IER_OFS unused
IPR_OFS 00000040

Symbol: IPR_OFS
   Definitions
      At line 166 in file ..\str71x\STR71x.s
   Uses
      None
Comment: IPR_OFS unused
IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 63 in file ..\str71x\STR71x.s
   Uses
      At line 67 in file ..\str71x\STR71x.s
      At line 434 in file ..\str71x\STR71x.s

ISR_Stack_Size 00000108

Symbol: ISR_Stack_Size
   Definitions
      At line 67 in file ..\str71x\STR71x.s
   Uses
      At line 72 in file ..\str71x\STR71x.s
Comment: ISR_Stack_Size used once
IVR_OFS 00000018

Symbol: IVR_OFS
   Definitions
      At line 163 in file ..\str71x\STR71x.s
   Uses
      At line 369 in file ..\str71x\STR71x.s
Comment: IVR_OFS used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 46 in file ..\str71x\STR71x.s
   Uses
      At line 417 in file ..\str71x\STR71x.s
      At line 422 in file ..\str71x\STR71x.s
      At line 427 in file ..\str71x\STR71x.s
      At line 432 in file ..\str71x\STR71x.s
      At line 437 in file ..\str71x\STR71x.s

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 42 in file ..\str71x\STR71x.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 422 in file ..\str71x\STR71x.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 39 in file ..\str71x\STR71x.s
   Uses
      At line 427 in file ..\str71x\STR71x.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 40 in file ..\str71x\STR71x.s
   Uses
      At line 432 in file ..\str71x\STR71x.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 41 in file ..\str71x\STR71x.s
   Uses
      At line 437 in file ..\str71x\STR71x.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 44 in file ..\str71x\STR71x.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 43 in file ..\str71x\STR71x.s
   Uses
      At line 417 in file ..\str71x\STR71x.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 38 in file ..\str71x\STR71x.s
   Uses
      At line 442 in file ..\str71x\STR71x.s
Comment: Mode_USR used once
PC0_OFS 00000000

Symbol: PC0_OFS
   Definitions
      At line 153 in file ..\str71x\STR71x.s
   Uses
      None
Comment: PC0_OFS unused



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

PC1_OFS 00000004

Symbol: PC1_OFS
   Definitions
      At line 154 in file ..\str71x\STR71x.s
   Uses
      None
Comment: PC1_OFS unused
PC2_OFS 00000008

Symbol: PC2_OFS
   Definitions
      At line 155 in file ..\str71x\STR71x.s
   Uses
      None
Comment: PC2_OFS unused
PD_OFS 0000000C

Symbol: PD_OFS
   Definitions
      At line 156 in file ..\str71x\STR71x.s
   Uses
      None
Comment: PD_OFS unused
PERIPH_RESET 00000001

Symbol: PERIPH_RESET
   Definitions
      At line 98 in file ..\str71x\STR71x.s
   Uses
      At line 318 in file ..\str71x\STR71x.s
Comment: PERIPH_RESET used once
RAM_BM 00000002

Symbol: RAM_BM
   Definitions
      At line 393 in file ..\str71x\STR71x.s
   Uses
      None
Comment: RAM_BM unused
SIR0_OFS 00000060

Symbol: SIR0_OFS
   Definitions
      At line 167 in file ..\str71x\STR71x.s
   Uses
      At line 380 in file ..\str71x\STR71x.s
Comment: SIR0_OFS used once
SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 60 in file ..\str71x\STR71x.s
   Uses
      At line 67 in file ..\str71x\STR71x.s
      At line 439 in file ..\str71x\STR71x.s

SWRES_OFS 00000014




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Symbol: SWRES_OFS
   Definitions
      At line 93 in file ..\str71x\STR71x.s
   Uses
      At line 325 in file ..\str71x\STR71x.s
      At line 326 in file ..\str71x\STR71x.s
      At line 330 in file ..\str71x\STR71x.s
      At line 331 in file ..\str71x\STR71x.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 59 in file ..\str71x\STR71x.s
   Uses
      At line 67 in file ..\str71x\STR71x.s
      At line 419 in file ..\str71x\STR71x.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 64 in file ..\str71x\STR71x.s
   Uses
      At line 71 in file ..\str71x\STR71x.s
      At line 450 in file ..\str71x\STR71x.s
      At line 476 in file ..\str71x\STR71x.s

52 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC12IRQHandler 00000000

Symbol: ADC12IRQHandler
   Definitions
      At line 213 in file ..\str71x\STR71x.s
   Uses
      At line 284 in file ..\str71x\STR71x.s
Comment: ADC12IRQHandler used once
BSPI0IRQHandler 00000000

Symbol: BSPI0IRQHandler
   Definitions
      At line 208 in file ..\str71x\STR71x.s
   Uses
      At line 279 in file ..\str71x\STR71x.s
Comment: BSPI0IRQHandler used once
BSPI1IRQHandler 00000000

Symbol: BSPI1IRQHandler
   Definitions
      At line 209 in file ..\str71x\STR71x.s
   Uses
      At line 280 in file ..\str71x\STR71x.s
Comment: BSPI1IRQHandler used once
CANIRQHandler 00000000

Symbol: CANIRQHandler
   Definitions
      At line 212 in file ..\str71x\STR71x.s
   Uses
      At line 283 in file ..\str71x\STR71x.s
Comment: CANIRQHandler used once
DAbtHandler 00000000

Symbol: DAbtHandler
   Definitions
      At line 190 in file ..\str71x\STR71x.s
   Uses
      At line 247 in file ..\str71x\STR71x.s
Comment: DAbtHandler used once
FIQHandler 00000000

Symbol: FIQHandler
   Definitions
      At line 192 in file ..\str71x\STR71x.s
   Uses
      At line 250 in file ..\str71x\STR71x.s
Comment: FIQHandler used once
FLASHIRQHandler 00000000

Symbol: FLASHIRQHandler
   Definitions
      At line 196 in file ..\str71x\STR71x.s
   Uses
      At line 267 in file ..\str71x\STR71x.s
Comment: FLASHIRQHandler used once
HDLCIRQHandler 00000000

Symbol: HDLCIRQHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 217 in file ..\str71x\STR71x.s
   Uses
      At line 291 in file ..\str71x\STR71x.s
Comment: HDLCIRQHandler used once
I2C0IRQHandler 00000000

Symbol: I2C0IRQHandler
   Definitions
      At line 210 in file ..\str71x\STR71x.s
   Uses
      At line 281 in file ..\str71x\STR71x.s
Comment: I2C0IRQHandler used once
I2C0ITERRIRQHandler 00000000

Symbol: I2C0ITERRIRQHandler
   Definitions
      At line 202 in file ..\str71x\STR71x.s
   Uses
      At line 273 in file ..\str71x\STR71x.s
Comment: I2C0ITERRIRQHandler used once
I2C1IRQHandler 00000000

Symbol: I2C1IRQHandler
   Definitions
      At line 211 in file ..\str71x\STR71x.s
   Uses
      At line 282 in file ..\str71x\STR71x.s
Comment: I2C1IRQHandler used once
I2C1ITERRIRQHandler 00000000

Symbol: I2C1ITERRIRQHandler
   Definitions
      At line 203 in file ..\str71x\STR71x.s
   Uses
      At line 274 in file ..\str71x\STR71x.s
Comment: I2C1ITERRIRQHandler used once
IRQHandler 00000000

Symbol: IRQHandler
   Definitions
      At line 191 in file ..\str71x\STR71x.s
   Uses
      At line 249 in file ..\str71x\STR71x.s
Comment: IRQHandler used once
PAbtHandler 00000000

Symbol: PAbtHandler
   Definitions
      At line 189 in file ..\str71x\STR71x.s
   Uses
      At line 246 in file ..\str71x\STR71x.s
Comment: PAbtHandler used once
RCCUIRQHandler 00000000

Symbol: RCCUIRQHandler
   Definitions
      At line 197 in file ..\str71x\STR71x.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 268 in file ..\str71x\STR71x.s
Comment: RCCUIRQHandler used once
RTCIRQHandler 00000000

Symbol: RTCIRQHandler
   Definitions
      At line 198 in file ..\str71x\STR71x.s
   Uses
      At line 269 in file ..\str71x\STR71x.s
Comment: RTCIRQHandler used once
SWIHandler 00000000

Symbol: SWIHandler
   Definitions
      At line 188 in file ..\str71x\STR71x.s
   Uses
      At line 245 in file ..\str71x\STR71x.s
Comment: SWIHandler used once
T0OC1IRQHandler 00000000

Symbol: T0OC1IRQHandler
   Definitions
      At line 220 in file ..\str71x\STR71x.s
   Uses
      At line 296 in file ..\str71x\STR71x.s
Comment: T0OC1IRQHandler used once
T0OC2IRQHandler 00000000

Symbol: T0OC2IRQHandler
   Definitions
      At line 221 in file ..\str71x\STR71x.s
   Uses
      At line 297 in file ..\str71x\STR71x.s
Comment: T0OC2IRQHandler used once
T0TIMIIRQHandler 00000000

Symbol: T0TIMIIRQHandler
   Definitions
      At line 195 in file ..\str71x\STR71x.s
   Uses
      At line 266 in file ..\str71x\STR71x.s
Comment: T0TIMIIRQHandler used once
T0TOIIRQHandler 00000000

Symbol: T0TOIIRQHandler
   Definitions
      At line 219 in file ..\str71x\STR71x.s
   Uses
      At line 295 in file ..\str71x\STR71x.s
Comment: T0TOIIRQHandler used once
T1TIMIIRQHandler 00000000

Symbol: T1TIMIIRQHandler
   Definitions
      At line 214 in file ..\str71x\STR71x.s
   Uses
      At line 285 in file ..\str71x\STR71x.s
Comment: T1TIMIIRQHandler used once
T2TIMIIRQHandler 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols


Symbol: T2TIMIIRQHandler
   Definitions
      At line 215 in file ..\str71x\STR71x.s
   Uses
      At line 286 in file ..\str71x\STR71x.s
Comment: T2TIMIIRQHandler used once
T3TIMIIRQHandler 00000000

Symbol: T3TIMIIRQHandler
   Definitions
      At line 216 in file ..\str71x\STR71x.s
   Uses
      At line 287 in file ..\str71x\STR71x.s
Comment: T3TIMIIRQHandler used once
UART0IRQHandler 00000000

Symbol: UART0IRQHandler
   Definitions
      At line 204 in file ..\str71x\STR71x.s
   Uses
      At line 275 in file ..\str71x\STR71x.s
Comment: UART0IRQHandler used once
UART1IRQHandler 00000000

Symbol: UART1IRQHandler
   Definitions
      At line 205 in file ..\str71x\STR71x.s
   Uses
      At line 276 in file ..\str71x\STR71x.s
Comment: UART1IRQHandler used once
UART2IRQHandler 00000000

Symbol: UART2IRQHandler
   Definitions
      At line 206 in file ..\str71x\STR71x.s
   Uses
      At line 277 in file ..\str71x\STR71x.s
Comment: UART2IRQHandler used once
UART3IRQHandler 00000000

Symbol: UART3IRQHandler
   Definitions
      At line 207 in file ..\str71x\STR71x.s
   Uses
      At line 278 in file ..\str71x\STR71x.s
Comment: UART3IRQHandler used once
USBHPIRQHandler 00000000

Symbol: USBHPIRQHandler
   Definitions
      At line 201 in file ..\str71x\STR71x.s
   Uses
      At line 272 in file ..\str71x\STR71x.s
Comment: USBHPIRQHandler used once
USBLPIRQHandler 00000000

Symbol: USBLPIRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
External symbols

      At line 218 in file ..\str71x\STR71x.s
   Uses
      At line 292 in file ..\str71x\STR71x.s
Comment: USBLPIRQHandler used once
UndefHandler 00000000

Symbol: UndefHandler
   Definitions
      At line 187 in file ..\str71x\STR71x.s
   Uses
      At line 244 in file ..\str71x\STR71x.s
Comment: UndefHandler used once
WDGIRQHandler 00000000

Symbol: WDGIRQHandler
   Definitions
      At line 199 in file ..\str71x\STR71x.s
   Uses
      At line 270 in file ..\str71x\STR71x.s
Comment: WDGIRQHandler used once
XTIIRQHandler 00000000

Symbol: XTIIRQHandler
   Definitions
      At line 200 in file ..\str71x\STR71x.s
   Uses
      At line 271 in file ..\str71x\STR71x.s
Comment: XTIIRQHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 457 in file ..\str71x\STR71x.s
   Uses
      At line 458 in file ..\str71x\STR71x.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 471 in file ..\str71x\STR71x.s
   Uses
      None
Comment: __use_two_region_memory unused
35 symbols
478 symbols in table
